# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Windows Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-2019
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10"]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
        cache: 'pip'
    ## RTools is only necessary on windows
    - name: Install rtools (mingw-w64)
      # From https://github.com/scipy/scipy/blob/main/.github/workflows/windows.yml
      run: |
        choco install rtools -y --no-progress --force --version=4.0.0.20220206
        echo "c:\rtools40\ucrt64\bin;" >> $env:GITHUB_PATH
    - name: show-versions
      run: |
        gcc --version
        gfortran --version
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install click numpy pandas matplotlib build wheel setuptools_scm meson-python pytest ninja
    - name: Build and package
      run: |
        python -m build --no-isolation
    - name: Store Wheel
      uses: actions/upload-artifact@v3
      with:
        name: pyfvs-${{ runner.os }}-py${{ matrix.python-version }}-wheels
        path: dist/*.whl
        if-no-files-found: warn
    - name: Store Sdist
      uses: actions/upload-artifact@v3
      with:
        name: pyfvs-sdist
        path: dist/*.tar.gz
        if-no-files-found: warn
#     - name: Test with pytest
#       run: |
#         pytest
