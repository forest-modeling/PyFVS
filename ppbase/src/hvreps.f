      SUBROUTINE HVREPS (NPLT)
      IMPLICIT NONE
C----------
C  **HVREPS DATE OF LAST REVISION:  07/31/08              
C----------
C
C     CALLED FROM PPMAIN...CREATE THE NECESSARY REPS, SET THE
C     VALUE SELECTED, AND CREATE THE MODIFIED STAND LABEL SET.
C
C     REMEMBER:  THIS ROUTINE IS CALLED WITHIN A DO OVER STANDS LOOP.
C
C     MULTISTAND POLICY ROUTINE - N.L. CROOKSTON  - JULY 1987
C     FORESTRY SCIENCES LABORATORY - MOSCOW, ID 83843
C
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'PPEPRM.F77'
C
C
      INCLUDE 'PPHVCM.F77'
C
C
      INCLUDE 'PPCNTL.F77'
C
C
      INCLUDE 'OPCOM.F77'
C
C
COMMONS
C
      INTEGER IDELAB(15),NHVRPS(4),IRPNT(9),IDLB(15)
      INTEGER I,I1,IHV,NTOTRS,IST,LENWK2,NODE,NRP,K,ITRPS
      INTEGER IRP4,I4ST1,JHV,NDLB,KHV,LENWK1,IRC
C
      CHARACTER CBISN*7,CISN*11,NPLT*26
C
      IF (LHVDEB) WRITE(JOPPRT,1) LHIER,ISTND,NPLT,SLSET(1:LENSLS)
    1 FORMAT (/' IN HVREPS: LHIER,ISTND=',L2,I5,' NPLT=',A8
     >        /T13,'SLSET=',A)
C
C     COUNT UP THE NUMBER OF REPS THIS STAND WILL START OUT NEEDING.
C     1 REP FOR ALL OF THE STATUS CODES OF 2 (NOT SELECTED),
C     PLUS ONE FOR ALL CODES OF 3 (SELECTED), PLUS ONE FOR
C     EACH CODE 4 (PARTIALLY SELECTED AND NOT SELECTED).
C
    5 CONTINUE
      DO 10 I=1,4
      NHVRPS(I)=0
   10 CONTINUE
C
C     IF HIERARCHIES ARE BEING USED, THEN DON'T COUNT THE FIRST
C     POLICY.
C
      IF (LHIER) THEN
         I1=2
      ELSE
         I1=1
      ENDIF
      DO 20 IHV=I1,IXHRVP
      IF (IHVTAB(IHV,1).EQ.0) GOTO 20
      IF (IHVSTA(ISTND,IHV).GT.0 .AND. IHVSTA(ISTND,IHV).LE.4)
     >    NHVRPS(IHVSTA(ISTND,IHV))=NHVRPS(IHVSTA(ISTND,IHV))+1
   20 CONTINUE
      IF (LHVDEB) WRITE (JOPPRT,'('' IN HVREPS: NHVRPS(1:4)='',4I4,
     >  '' IHVSTA('',I5,'',1:15)='',15I2)') NHVRPS,
     >   ISTND,(IHVSTA(ISTND,IHV),IHV=1,IXHRVP)
C
C     IF ANY OF THE STATUS CODES ARE 1'S, SET THE EVENT
C     MONITOR TEST VARIABLES TO "SELECTED IS UNDEFINED".  THIS CAN
C     OCCUR IF THE STAND IS ITSELF A REPLICATE CREATED IN PPEVMI
C     TO REPRESENT ONE ALTERNATIVE ACTIVITY GROUP WHEN THE PARRENT
C     STAND IS SELECTED.
C
      IF (NHVRPS(1).GT.0) THEN
         CALL EVUST4 (9)
         RETURN
      ENDIF
C
C     COUNT UP THE NUMBER OF REPS REQUIRED.  SET A TARGET BECAUSE IF
C     THERE IS NOT ROOM FOR ALL OF THE REPS, A SHORTER PROBLEM WILL
C     BE TRIED.
C
      NTOTRS=0
      IF (NHVRPS(2).GT.0) NTOTRS=1
      IF (NHVRPS(3).GT.0) NTOTRS=NTOTRS+1
      NTOTRS=NTOTRS+(NHVRPS(4)*2)
      IF (LHVDEB) WRITE (JOPPRT,'('' IN HVREPS: NTOTRS='',I4)') NTOTRS
C
C     IF HIERARCHIES ARE BEING SIMULATED, AND THE NUMBER OF REPS IS 1,
C     THEN; SET THE STAND LABEL SET AND STAND POINTERS, AND BRANCH TO
C     PROCESS THE LABELS.
C
      IF (LHIER .AND. NTOTRS.EQ.1) THEN
         IST=ISTND
         IRPNT(1)=ISTND
         WKSTR2=SLSET
         LENWK2=LENSLS
         IF (IHVSTA(ISTND,1).EQ.3) THEN
            NHVRPS(3)=1
            NHVRPS(2)=0
         ENDIF
         GOTO 100
      ENDIF
C
C     IF THE TOTAL NUMBER OF REPS IS 1, BRANCH TO SET VALUE OF
C     SELECTED IN THE EVENT MONITOR.
C
      IF (NTOTRS.LE.1) GOTO 250
C
C     CHECK TO SEE THAT THERE IS ENOUGH ROOM FOR THE REPS.  IF NOT,
C     TRY TURNING OFF LPRTCT (THIS WILL REDUCE THE NUMBER OF
C     REPS NEEDED IF SOME OF THE REPS ARE TYPE 4'S)...AND TRY AGAIN.
C
      CISN=CISNUM(ISTND)
      CBISN=CISN(5:11)
      CALL RITCOL (CBISN,NODE)
C
      IF (LHVDEB) WRITE (JOPPRT,'('' IN HVREPS: NOSTND='',I5,
     >   '' NODE='',I5,'' LPRTCT='',L2)') NOSTND,NODE,LPRTCT
C
      IF ((NTOTRS.GE.2 .AND. NOSTND+NTOTRS-1 .GT. MXSTND) .OR.
     >    (NTOTRS.GT.9) .OR. (NODE.GE.7)) THEN
C
C        WRITE THE VALUES OF CRITICAL VARIABLES.
C
         WRITE (JOPPRT,40) NTOTRS,MXSTND,NOSTND+NTOTRS-1,NODE
   40    FORMAT (/' REQUESTED REPS (MAX IS 9)=',I3,
     >            ' TARGET STAND COUNT (MAX IS ',I4,')=',I4,
     >            ' NODE COUNT (MAX IS 7)=',I2)
C
         IF (LPRTCT .AND. NHVRPS(4).GT.0) THEN
            LPRTCT=.FALSE.
            CALL RCDSET (3,.TRUE.)
            WRITE (JOPPRT,50) 'WARNING','SELECTING PORTIONS OF STANDS'
   50       FORMAT (/' ******** ',A,':  ',A,' HAS BEEN STOPPED',
     >            ' DUE TO A LACK OF SPACE FOR STAND REPLICATES.')
            DO 60 IHV=1,IXHRVP
            IF (IHVSTA(ISTND,IHV).EQ.4) THEN
               IF (HVPART(IHV).GT. 0.5) THEN
                  IHVSTA(ISTND,IHV)=3
               ELSE
                  IHVSTA(ISTND,IHV)=2
               ENDIF
            ENDIF
   60       CONTINUE
C
C           BRANCH BACK TO RECOUNT...AND TRY AGAIN.
C
            GOTO 5
         ELSE
C
C           STOP HARVEST SIMULATION.
C
            CALL RCDSET (4,.TRUE.)
            WRITE (JOPPRT,50) 'ERROR','MULTISTAND POLICY SCHEDULING'
            LHVALL=.FALSE.
            RETURN
         ENDIF
      ENDIF
C
C     THE STAND REPLICATES CAN BE CREATED.
C
C     SAVE THE CURRENT VALUE OF ISTND AND THE STAND LABEL SET.
C
      IST=ISTND
      WKSTR2=SLSET
      LENWK2=LENSLS
C
C     START CONSTRUCTING A LIST OF NODE POINTERS...IT WILL BE ADDED
C     TO AS THE REP ENTRIES ARE CREATED IN ISNKEY.
C
      NRP=1
      IRPNT(1)=ISTND
C
C     CONSTRUCT THE ENTRIES IN INSKEY AND ASSOCIATED ARRAYS.
C
      NODE=NODE+1
      CALL ADD1 (CISN,NODE)
      CISNUM(ISTND)=CISN
      ISNKEY(ISTND,4)=0
      DO 90 I=2,NTOTRS
      NOSTND=NOSTND+1
      CALL ADD1(CISN,NODE)
      CISNUM(NOSTND)=CISN
      ISNSRT(NOSTND)=NOSTND
      BRCHWT(NOSTND)=BRCHWT(ISTND)
      AREAS (NOSTND)=AREAS (ISTND)
      SAMWTS(NOSTND)=SAMWTS(ISTND)
      STDIDS(NOSTND)=STDIDS(ISTND)
      MGMIDS(NOSTND)=MGMIDS(ISTND)
      LNSETS(NOSTND)=LNSETS(ISTND)
      SLSETS(NOSTND)(1:LNSETS(NOSTND))=SLSETS(ISTND)(1:LNSETS(ISTND))
      IPMODE(NOSTND)=IPMODE(ISTND)
      DO 80 K=1,4
      ISNKEY(NOSTND,K)=ISNKEY(ISTND,K)
   80 CONTINUE
      DO 85 IHV=1,IXHRVP
      IHVSTA(NOSTND,IHV)=IHVSTA(ISTND,IHV)
      HVPRI (NOSTND,IHV)=HVPRI (ISTND,IHV)
   85 CONTINUE
      IRPNT(I)=NOSTND
   90 CONTINUE
C
  100 CONTINUE
C
      IF (LHVDEB) WRITE (JOPPRT,'('' IN HVREPS: IRPNT(1:'',I3,'')='',
     >   9I7)') NTOTRS,(IRPNT(I),I=1,NTOTRS)
C
C     LOOP THROUGH THE TYPES OF REPS.
C
      DO 220 ITRPS=2,4
C
      IF (LHVDEB) WRITE (JOPPRT,'('' IN HVREPS: NHVRPS('',I2,'')='',
     >   I4)') ITRPS,NHVRPS(ITRPS)
C
C     IF THERE ARE NONE OF THESE, BRANCH TO THE NEXT TYPE.
C
      IF (NHVRPS(ITRPS).EQ.0) GOTO 220
C
C     IF ITRPS IS A 2 OR A 3, THEN ONE REP IS REQUIRED FOR ALL OF THE
C     POLICIES WITH STATUS CODES 2 AND ONE IS REQUIRED FOR ALL
C     OF THE STATUS CODES OF 3.  IF ITRPS=4, THEN TWO REPS ARE NEEDED
C     FOR EACH POLICY WITH STATUS CODE 4.  AT THIS POINT, A DO LOOP IS
C     OPENNED OVER POLICIES.  IT WILL BE PREMATURELY EXITED IF
C     ITRPS IS 2 OR 3.
C
      DO 190 IHV=1,IXHRVP
C
C     IRP4 WILL BE A COUNTER USED TO KEEP TRACK OF WHICH OF THE TWO
C     REPS ARE BEING CREATED FOR STATUS CODE 4 POLICIES...WE WILL
C     BRANCH BACK TO THE CONTINUE STATEMENT TO PROCESS THE SECOND REP.
C
      IRP4=0
  110 CONTINUE
C
C     GET A POINTER TO THE "NEXT" REP.  THE LOGIC THAT FOLLOWS INSURES
C     THAT THE ROOT STAND WILL CARRY THE LAST REP.
C
      NRP=NRP+1
      IF (NRP.GT.NTOTRS) NRP=1
      ISTND=IRPNT(NRP)
      IF (LHVDEB) WRITE (JOPPRT,'('' IN HVREPS: NRP,ISTND='',2I5)')
     >            NRP,ISTND
C
C     CONSTRUCT A LIST OF UPPER LEVEL POLICY LABELS THAT NEED
C     TO BE DELETED FROM THE STAND POLICY LABEL FOR THIS STAND. THIS
C     IS DONE DIFFERENTLY DEPENDING ON THE VALUE OF ITRPS.
C
      IF (ITRPS.EQ.4) THEN
C
C        WHEN ITRPS IS 4, THEN IDELAB IS ZERO FOR LABELS OF
C        POLICIES THAT THE STAND DOES NOT APPLY TO, AND LESS THAN ONE
C        FOR LABELS OF THAT NEED TO BE KEPT (WHICH WILL ONLY BE THE
C        LABEL FOR HARVEST POLICY IHV), AND GREATER THAN ONE FOR LABELS
C        THAT NEED TO BE DELETED FROM THE STAND POLICY LABEL.
C
         IF (IHVSTA(ISTND,IHV).NE.4) THEN
            NRP=NRP-1
            GOTO 190
         ENDIF
C
C        INCREMENT THE IRP4 COUNTER.
C        IF WE ARE ON THE SECOND REP FOR THIS POLICY, BRANCH TO END.
C
         IRP4=IRP4+1
         IF (IRP4.GT.1) GOTO 180
C
C        SAVE THE STAND NUMBER FOR THIS REP.  IT WILL BE USED TO
C        SET THE STAND LABEL SET FOR THE SECOND REP NEEDED TO REPRE-
C        SENT THIS POLICY
C
         I4ST1=ISTND
C
         DO 120 JHV=1,IXHRVP
         IF (IHVSTA(ISTND,JHV).LE.1) THEN
            IDELAB(JHV)=0
         ELSEIF (JHV.EQ.IHV) THEN
            IDELAB(JHV)=-JHV
         ELSE
            IDELAB(JHV)=JHV
         ENDIF
  120    CONTINUE
      ELSE
C
C        WHEN ITRPS IS 2 OR 3, IDELAB IS SET 0 FOR UNDEFINED LABELS
C        (THOSE POLICIES TO WHICH THE STAND DOES NOT APPLY) AND
C        LESS THAN 0 FOR LABELS CORRESPONDING TO POLICIES THAT SHARE
C        THE SAME VALUE OF ITRPS (AND THEREFORE WILL BE KEPT) AND
C        GREATER THAN 0 FOR LABELS THAT DO NOT SHARE THE SAME VALUE
C        OF ITRPS (AND NEED TO BE DELETED FROM THE STAND POLICY LABEL).
C
         DO 130 JHV=1,IXHRVP
         IF (IHVSTA(ISTND,JHV).LE.1) THEN
            IDELAB(JHV)=0
         ELSEIF (IHVSTA(ISTND,JHV).EQ.ITRPS) THEN
            IDELAB(JHV)=-JHV
         ELSE
            IDELAB(JHV)=JHV
         ENDIF
  130    CONTINUE
      ENDIF
      IF (LHVDEB) THEN
         WRITE (JOPPRT,'('' IN HVREPS: ITRPS,IHV='',2I3,
     >         '' IDELAB(1:'',I2,'')='',15I3)') ITRPS,IHV,IXHRVP,
     >         (IDELAB(I),I=1,IXHRVP)
         WRITE (JOPPRT,'(T13,''IUNLAB(1:'',I2,'')='',15I3)')
     >         IXHRVP,(IUNLAB(I),I=1,IXHRVP)
      ENDIF
C
C     RESET THE STAND POLICY LABEL.
C
      SLSET=WKSTR2
      LENSLS=LENWK2
      SLSETS(ISTND)=SLSET
      LNSETS(ISTND)=LENSLS
C
C     REGARDLESS OF THE VALUE OF ITRPS...IDELAB IS DEFINED IN A
C     CONSISTENT FASHION.  NOW CREATE THE LIST OF UNIQUE
C     POLICIES THAT NEED TO BE DELETED FROM THE STAND LABEL SET.
C     IN THIS CASE, UNIQUENESS DEPENDS ONLY ON THE LABEL UP TO THE
C     PERIOD...SO ARRAY IUNLAB WILL BE USED.
C
C     IF HIERARCHIES ARE BEING PROCESSED (LHIER=TRUE), AND
C     IF THE "NOT SELECTED" REP IS BEING PROCESSED (ITRPS=2), AND
C     THE STAND IS "NOT SELECTED" FOR THE FIRST POLICY, THEN DELETE
C     THE FIRST POLICY LABEL FROM THE STAND LABEL SET.
C     THIS CODE FORCES THE PROGRAM TO MANAGE THE STAND UNDER THE
C     POLICIES OUTLINED FOR NOT SELECTED UNDER THE SECOND AND
C     SUBSEQUENT POLICIES.
C
      NDLB=0
      IF (LHIER) THEN
         IF (ITRPS.EQ.2 .AND. IHVSTA(ISTND,1).EQ.2) THEN
            NDLB=1
            IDLB(1)=1
         ENDIF
      ENDIF
      DO 170 KHV=1,IXHRVP
      IF (IDELAB(KHV).GT.0) THEN
         DO 150 JHV=1,IXHRVP
         IF (IUNLAB(KHV).EQ.IUNLAB(JHV).AND.IDELAB(JHV).LT.0) GOTO 170
  150    CONTINUE
         IF (NDLB.EQ.0) THEN
            NDLB=1
            IDLB(1)=IUNLAB(KHV)
         ELSE
            DO 160 I=1,NDLB
            IF (IDLB(I).EQ.IUNLAB(KHV)) GOTO 170
  160       CONTINUE
            NDLB=NDLB+1
            IDLB(NDLB)=IUNLAB(KHV)
         ENDIF
      ENDIF
  170 CONTINUE
      IF (NDLB.GT.0) THEN
C
C        PROCEED WITH DELETING THE LABEL FROM THE STAND LABEL SET.
C
         DO 172 I=1,NDLB
         WKSTR1=SLSET
         LENWK1=LENSLS
         WKHPLB=HVPLAB(IDLB(I))(1:LNHPLB(IDLB(I),2))
         CALL LBRNLS (LENWK1,WKSTR1,LNHPLB(IDLB(I),2),WKHPLB,
     >                LENSLS,SLSET,IRC)
 172     CONTINUE
      ENDIF
      SLSETS(ISTND)=SLSET
      LNSETS(ISTND)=LENSLS
      IF (LHVDEB) THEN
         WRITE (JOPPRT,'('' IN HVREPS: NDLB='',I2)') NDLB
         IF (NDLB.GT.0) WRITE (JOPPRT,'(T13,''IDLB(1:NDLB)='',9I4)')
     >                        (IDLB(I),I=1,NDLB)
         WRITE (JOPPRT,'('' IN HVREPS: SLSETS(ISTND)='',A)')
     >          SLSETS(ISTND)(1:LNSETS(ISTND))
         WRITE (JOPPRT,'('' IN HVREPS: SLSET='',A)') SLSET(1:LENSLS)
         WRITE (JOPPRT,'('' IN HVREPS: BRCHWT='',F10.6)') BRCHWT(ISTND)
         WRITE (JOPPRT,'('' IN HVREPS: HVPART='',F10.6)') HVPART(IHV)
      ENDIF
C
C     IF THE CURRENT REP IS NOT THE ROOT STAND, THEN STORE THE STAND.
C
      IF (ISTND.NE.IST) CALL PUTSTD
C
C     IF WE ARE PROCESSING REP TYPES 2 OR 3, BRANCH TO THE NEXT KIND.
C
      IF (ITRPS.NE.4) GOTO 200
C
C     WHEN ITRPS IS EQUAL TO 4, THE BRANCH (REP) WEIGHT NEEDS TO BE
C     MODIFIED BY THE PROPORTION OF THE STAND THAT IS NEEDED TO REACH
C     THE TARGET...THIS NUMBER IS STORED IN HVPRI.  ALSO,
C     THE STATUS CODE IS SET TO 3, FOR "SELECTED".
C
      BRCHWT(ISTND)=BRCHWT(ISTND)*HVPART(IHV)
      DO 175 I=1,IXHRVP
      IHVSTA(ISTND,I)=0
  175 CONTINUE
      IHVSTA(ISTND,IHV)=3
C
C     BRANCH BACK TO 110 FOR THE NEXT REP FOR THIS HARVEST POLICY.
C
      GOTO 110
  180 CONTINUE
C
C     BRANCH HERE FOR THE SECOND REP FOR THIS HARVEST POLICY.
C
      BRCHWT(ISTND)=BRCHWT(ISTND)*(1.0-HVPART(IHV))
      DO 185 I=1,IXHRVP
      IHVSTA(ISTND,I)=0
  185 CONTINUE
      IHVSTA(ISTND,IHV)=2
C
C     SET THE STAND LABEL SET EQUAL TO THE SLSET FOR THE PREVIOUS
C     REP USED TO REPRESENT THIS POLICY.
C
      IF (LHVDEB) WRITE (JOPPRT,'('' IN HVREPS: ISTND='',I4,
     >   '' I4ST1='',I4)') ISTND,I4ST1
      SLSETS(ISTND)=SLSETS(I4ST1)
      LNSETS(ISTND)=LNSETS(I4ST1)
      SLSET=SLSETS(ISTND)
      LENSLS=LNSETS(ISTND)
C
      IF (ISTND.NE.IST) CALL PUTSTD
      GOTO 220
  190 CONTINUE
  200 CONTINUE
C
C     DELETE THE POLICY STATUS CODES THAT DO NOT APPLY TO
C     THE CURRENT REP.
C
      IF (LHIER) THEN
         IF (IHVSTA(ISTND,1).EQ.2) THEN
            DO 205 IHV=2,IXHRVP
            IF (IHVSTA(ISTND,IHV).NE.ITRPS) IHVSTA(ISTND,IHV)=0
  205       CONTINUE
         ENDIF
      ELSE
         DO 210 IHV=1,IXHRVP
         IF (ITRPS.NE.IHVSTA(ISTND,IHV)) IHVSTA(ISTND,IHV)=0
  210    CONTINUE
      ENDIF
      IF (LHVDEB) WRITE (JOPPRT,'( '' IN HVREPS: ISTND='',I5,
     >     '' IHVSTA(ISTND,1:15)='',15I2)') ISTND,
     >     (IHVSTA(ISTND,I),I=1,IXHRVP)
  220 CONTINUE
C
C     REORDER THE PROCESSING ORDER SORT SO THAT THE NEW BRANCHES
C     (REPS) WILL BE PROCESSED NEXT.
C
      CALL C11SRT (NOSTND,CISNUM,ISNSRT,.FALSE.)
  250 CONTINUE
      IF (LHVDEB) WRITE (JOPPRT,'('' IN HVREPS: NTOTRS='',I4,
     >    '' ISTND='',I4)') NTOTRS,ISTND
C
C     CALL HVSTSL TO SET THE VALUE OF SELECTED FOR THE CURRENT STAND.
C
      CALL HVSTSL (ISTND,JOPPRT)
C
C     DONE.
C
      RETURN
      END
