      SUBROUTINE PPCVUT (LNOTBK,ARRAY)
      IMPLICIT NONE
C----------
C  **PPCVUT--PPBASE  DATE OF LAST REVISION:  07/31/08              
C----------
C
C     WRITE THE COVER OUTPUT FOR SELECTED STANDS.
C
C     PART OF THE PARALLEL PROCESSING EXTENSION OF PROGNOSIS SYSTEM.
C     N.L. CROOKSTON--FORESTRY SCIENCES LAB, MOSCOW, ID--FEB 1982.
C
C     CALLED FROM PPIN - PROCESS PPE KEYWORDS.
C
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'PPEPRM.F77'
C
C
      INCLUDE 'PPCNTL.F77'
C
C
      INCLUDE 'CONTRL.F77'
C
C
      INCLUDE 'CVCOM.F77'
C
C
COMMONS
C
      INTEGER NSEL,I
      LOGICAL LSFLAG,LPROC,LNOTBK(7)
      REAL ARRAY(7)
C
C     WRITE INFO REGARDING THE CONTROL OF THE COVER OUTPUT ELEMENTS.
C
      IF (LNOTBK(1) .AND. ARRAY(1).EQ.0) WRITE (JOPPRT,11)
      IF (ARRAY(1).GT.0) WRITE (JOPPRT,12)
      IF (LNOTBK(2) .AND. ARRAY(2).EQ.0) WRITE (JOPPRT,21)
      IF (ARRAY(2).GT.0) WRITE (JOPPRT,22)
      IF (LNOTBK(3) .AND. ARRAY(3).EQ.0) WRITE (JOPPRT,31)
      IF (ARRAY(3).GT.0) WRITE (JOPPRT,32)
      IF (LNOTBK(4) .AND. ARRAY(4).EQ.0) WRITE (JOPPRT,41)
      IF (ARRAY(4).GT.0) WRITE (JOPPRT,42)
      IF (ARRAY(5).GT.0) WRITE (JOPPRT,51) IFIX(ARRAY(5))
   11 FORMAT (T13,'DO NOT PRINT COVER OUTPUT FOR ANY STAND.')
   12 FORMAT (T13,'PRINT COVER OUTPUT FOR ALL STANDS.')
   21 FORMAT (T13,'DO NOT PRINT SHRUB OUTPUT FOR ANY STAND.')
   22 FORMAT (T13,'PRINT SHRUB OUTPUT FOR ALL STANDS.')
   31 FORMAT (T13,'DO NOT PRINT COVER SUMMARY OUTPUT FOR ANY STAND.')
   32 FORMAT (T13,'PRINT COVER SUMMARY OUTPUT FOR ALL STANDS.')
   41 FORMAT (T13,'DO NOT WRITE COVER OUTPUT WITHOUT HEADINGS.')
   42 FORMAT (T13,'WRITE COVER OUTPUT WITHOUT HEADINGS.')
   51 FORMAT (T13,'USE DATA SET REFERENCE NUMBER ',I4,' FOR ',
     >            '"CVNOHEAD" OUTPUT FILE.')
C
C     INITIALIZE NSEL, WHICH COUNTS THE NUMBER OF STANDS ACTUALLY
C     SELECTED.
C
      NSEL=0
C
C     CREATE A LIST OF STANDS THAT PASS THE SELECT CONDITIONS.
C
      DO 10 ISTND=1,NOSTND
C
C     TEST THE STAND AND MANAGEMENT IDS FOR SELECT-CONDITIONS.
C
      CALL SLCND1 (LPROC,STDIDS(ISTND),MGMIDS(ISTND))
      IF (PDEBUG) WRITE (JOPPRT,'('' IN PPCVUT AT CND1, LPROC='',L2)')
     >            LPROC
      IF (.NOT. LPROC) GOTO 10
C
C     TEST THE ISN FOR USER SPECIFIED SELECT-CONDITIONS.
C
      CALL SLCND2 (LPROC,CISNUM(ISTND))
      IF (PDEBUG) WRITE (JOPPRT,'('' IN PPCVUT AT CND2, LPROC='',L2)')
     >            LPROC
      IF (.NOT. LPROC) GOTO 10
C
C     TEST THE STAND LABEL SET FOR USER SPECIFIED SELECT-CONDITIONS.
C
      CALL SLCND3 (LPROC,ISTND)
      IF (PDEBUG) WRITE (JOPPRT,'('' IN PPCVUT AT CND3, LPROC='',L2)')
     >            LPROC
      IF (.NOT. LPROC) GOTO 10
C
C     TEST THE MSPLABEL FOR USER SPECIFIED SELECT-CONDITIONS.
C
      CALL SLCND4 (LPROC,ISTND)
      IF (PDEBUG) WRITE (JOPPRT,'('' IN PPCVUT AT CND4, LPROC='',L2)')
     >            LPROC
      IF (.NOT. LPROC) GOTO 10
C
C     COUNT THE NUMBER OF ACCEPTED STANDS, SAVE THE STAND POINTER
C     IN A LIST (ISNSRT).
C
      NSEL=NSEL+1
      ISNSRT(NSEL)=ISTND
      IF (PDEBUG) WRITE (JOPPRT,5) NSEL,ISTND
    5 FORMAT (' IN PPCVUT: NSEL=',I5,' ISTND=',I5)
   10 CONTINUE
C
C     IF NO STANDS WERE SELECTED FOR PROCESSING, THEN WRITE AN ERROR
C     MSG, AND RETURN.
C
      IF (NSEL.LE.0) THEN
         CALL PPERRP (.TRUE.,8)
         RETURN
      ENDIF
C
C     SORT THE LIST ON THE STAND ID'S.
C
      CALL C26SRT (NSEL,STDIDS,ISNSRT,.FALSE.)
C
C     DO OVER THE STANDS IN THE LIST
C
      DO 30 I=1,NSEL
      ISTND=ISNSRT(I)
C
C     GET THE STAND AND CALL CVOUT TO OUTPUT IT.
C     SAVE THE VALUE OF LFLAG (HEADING CONTROL).
C
      LSFLAG=LFLAG
      CALL GETSTD
      LFLAG=LSFLAG
      IF (LNOTBK(1) .AND. ARRAY(1).EQ.0) LCOVER=.FALSE.
      IF (ARRAY(1).GT.0) LCOVER=.TRUE.
      IF (LNOTBK(2) .AND. ARRAY(2).EQ.0) LSHRUB=.FALSE.
      IF (ARRAY(2).GT.0) LSHRUB=.TRUE.
      IF (LNOTBK(3) .AND. ARRAY(3).EQ.0) LCVSUM=.FALSE.
      IF (ARRAY(3).GT.0) LCVSUM=.TRUE.
      IF (LNOTBK(4) .AND. ARRAY(4).EQ.0) LCVNOH=.FALSE.
      IF (ARRAY(4).GT.0) LCVNOH=.TRUE.
      IF (ARRAY(5).GT.0) JCVNOH=IFIX(ARRAY(5))
C
      CALL CVOUT
   30 CONTINUE
      RETURN
      END
