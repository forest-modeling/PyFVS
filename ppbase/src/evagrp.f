      SUBROUTINE EVAGRP (LRNLS,IMAE,MAE,MAELNK)
      IMPLICIT NONE
C----------
C  **EVAGRP DATE OF LAST REVISION:  07/31/08
C----------
C
C     SCHEDULES THE ACTIVITIES ASSOCIATED WITH AN ALTERNATIVE
C     ACTIVITY GROUP.  SETS THE STAND LABEL SET AND, WHEN THERE
C     IS A NON-NULL RNLS, DELETES THE APPROPRIATE EVENTS FOR
C     THE "EXTRA BRANCH".  CALLED BY PPEVMI.
C
C     PPE/EVENT MONITOR ROUTINE - NL CROOKSTON - JAN 1987
C
C     LRNLS = THE LENGTH OF THE REMAINING NODE LABEL SET
C     IMAE  = THE CURRENT MEMBER OF MAELNK BEING PROCESSED.
C     MAE   = THE LENGTH OF MAELNK.
C     MAELNK= SEE PPEVMI.
C
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'PPEPRM.F77'
C
C
      INCLUDE 'OPCOM.F77'
C
C
      INCLUDE 'CONTRL.F77'
C
C
      INCLUDE 'ARRAYS.F77'
C
C
      INCLUDE 'PPCNTL.F77'
C
C
COMMONS
C
      INTEGER MAELNK(2,50),MAE,LRNLS,IALNK,KODE,LENWRK,ISCHDS,J,IRC,I
      INTEGER IMAE
C
C     SET THE POINTER TO THE ACTIVITY GROUP ARRAYS.
C
      IALNK=MAELNK(1,IMAE)
      IF (PDEBUG) WRITE (JOPPRT,'('' IN EVAGRP: IMAE='',I4,
     >   ''; IALNK='',I4,''; LNRLS='',I4)') IMAE,IALNK,LRNLS
C
C     IF THE POINTER IS GREATER THAN ZERO, PROCEED WITH PROCESSING
C     THE ALTERNATIVE.
C
      IF (IALNK.GT.0) THEN
C
C        IF LABEL PROCESSING IS ACTIVATED, SET THE STAND LABEL SET
C        EQUAL TO THE INTERSECTION OF THE STAND LABEL SET AND THE
C        ACTIVITY GROUP LABEL SET.
C
         IF (LBSETS) THEN
            CALL LBINTR (LENSLS,SLSET,LENAGL(IALNK),AGLSET(IALNK),
     >                   LENWRK,WKSTR1,KODE)
            IF (KODE.LE.0) THEN
               SLSET=WKSTR1(1:LENWRK)
               LENSLS=LENWRK
            ELSE
               SLSET=' '
               LENSLS=0
            ENDIF
            IF (PDEBUG) WRITE (JOPPRT,'('' IN EVAGRP: SLSET='',A)')
     >                  SLSET(1:LENSLS)
         ENDIF
C
C        SCHEDULE THE ACTIVITIES.
C
         CALL OPSCHD (IY(ICYC),IEVACT(IALNK,4),IEVACT(IALNK,5),
     >                ISCHDS,KODE)
         IF (PDEBUG) WRITE (JOPPRT,5) IALNK,IEVACT(IALNK,4),
     >      IEVACT(IALNK,5),ISCHDS,KODE
    5    FORMAT (' IN EVAGRP: IEVACT(',I4,',4&5)=',2I4,'; ISCHDS=',I4,
     >            '; KODE=',I2)
         IF (KODE.GE.2) THEN
C
C           A SCHEDULING ERROR.  WRITE MSG, FLAG THE EVENT AND
C           ACTIVITY GROUP THAT AN ATTEMPT TO SCHEDULE HAS FAILED.
C
            IEVACT(IALNK,2)=-1
            IALNK=MAELNK(2,IMAE)
            IEVNTS(IALNK,3)=-1
            CALL ERRGRO (.TRUE.,18)
         ELSE
C
C           THE ACTIVITIES HAVE BEEN SCHEDULED.  CHANGE THE SCHEDULING
C           STATUS CODE.
C
            IEVACT(IALNK,2)=2
C
C           INCORPORATE THE JUST SCHEDULED ACTIVITIES INTO THE
C           SCHEDULE FOR THE STAND AND THIS CYCLE AND CALL EVTSTV TO
C           COMPUTE USER DEFINED VARIABLES.
C
            IF (ISCHDS.GT.0) THEN
               CALL OPINCR (IY,ICYC,NCYC)
               CALL EVTSTV (1)
            ENDIF
         ENDIF
C
C        MODIFY THE BRANCH WEIGHTING FACTOR FOR THIS ALTERNATIVE.
C        IF IEVACT(IALNK,6) = ZERO, THEN NO CHANGE; IF > ZERO, THEN
C        USE THE CORRECT MEMBER OF PARMS TO MODIFY THE WEIGHT;
C        IF < ZERO, COMPUTE THE MULTIPLIER USING CODE STORED IN
C        IEVCOD.
C
         J=IEVACT(IALNK,6)
         IF (J.GT.0) THEN
            BRCHWT(ISTND)=BRCHWT(ISTND)*PARMS(J)
         ELSEIF (J.LT.0) THEN
            J=-J
            CALL ALGEVL (LREG,MXLREG,XREG,MXXREG,IEVCOD(J),MAXCOD-J+1,
     >                   IY(1),IY(ICYC),PDEBUG,JOPPRT,IRC)
            IF (IRC.LE.0) THEN
               BRCHWT(ISTND)=BRCHWT(ISTND)*XREG(2)
            ELSE
               IEVACT(IALNK,6)=0
            ENDIF
            IF (PDEBUG) WRITE (JOPPRT,'('' IN EVAGRP: ISTND='',I5,
     >                  ''; IRC='',I3,''; BRCHWT='',E14.7)') 
     >                  IRC,ISTND,BRCHWT(ISTND)
         ENDIF
C
C     THE POINTER IS EQUAL TO ZERO.  IF THE RNLS IS NOT NULL, THEN
C     SCHEDULE AN EXTRA BRANCH USING THE RNLS FOR THE SLS AND
C     DELETE ALL OF THE EVENTS POINTED TO IN MAELNK.
C
      ELSE
         IF (LRNLS.GT.0) THEN
            SLSET=WKSTR3
            LENSLS=LRNLS
            IF (PDEBUG) WRITE (JOPPRT,'('' IN EVAGRP: SLSET='',
     >                  A)') SLSET(1:LENSLS)
            DO 10 I=1,MAE
            J=MAELNK(2,I)
            IF (J.GT.0) IEVNTS(J,3)=-1
   10       CONTINUE
         ENDIF
      ENDIF
      RETURN
      END
