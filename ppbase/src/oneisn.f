      SUBROUTINE ONEISN (JISN,CISNS,IPTS,ICYCS,IENISN,
     >                   ICBRK,NCYC2,NRPTS)
      IMPLICIT NONE
C----------
C  **ONEISN--PPBASE  DATE OF LAST REVISION:  07/31/08
C----------
C
C     ORDER ALL BRANCHES UNDER ONE INTERNAL STAND NUMBER.
C     ICBRK, NCYC2, AND NPRTS ARE DEFINED BY THIS ROUTINE, AND THE
C     SUBSET OF IPTS ASSOCIATED WITH ONE ROOT STAND IS REORDERED
C     SUCH THAT THE SUBSET MEMBERS POINT TO ISNS IN INCREASING ORDER
C     ORDER OF ISNS, AND WITHIN EQUAL ISNS, TO INCREASING ORDER OF
C     ICYCS.
C
C     PART OF THE PARALLEL PROCESSING EXTENSION OF PROGNOSIS SYSTEM.
C     N.L. CROOKSTON--FORESTRY SCIENCES LAB, MOSCOW, ID--JAN 1981
C
C     CALLED FROM:  SNDTBS - PROCESS AND GENERATE STAND TABLES.
C
C     ICBRK = RETURNED AS POINTERS TO IPTS WHICH POINT TO BREAKS IN
C             ISNS ALONG CYCLE BOUNDARIES.  ALL OF THE VALUES OF
C             ICBRK REFER TO THE SAME ROOT STAND.
C     NCYC2 = THE NUMBER OF CYCLES FOR THE ROOT STAND REFERED TO BY
C             JISN; DEFINED BY COMPUTING THE VALUE, RATHER THAN
C             FINDING ITS VALUE DIRECTLY IN THE STAND TABLE DATA BASE.
C     NRPTS = THE NUMBER OF ENTERIES (THEREFORE 'REPORTS') FOR JISN.
C     JISN  = INDEX TO THE ROOT STAND NUMBER YOU ARE PROCESSING.
C             IF JISN=1, THEN THE FIRST STAND PROJECTED IS BEING
C             PROCESSED.  IF JISN=NENISN, THEN THE LAST STAND
C             PROJECTED IS BEING PROCESSED.
C     CISNS = THE ARRAY OF INTERNAL STAND NUMBERS.
C     ICYCS = THE ARRAY OF CYCLE NUMBERS CORRESPONDING TO ISNS.
C     IPTS  = POINTER ARRAY TO ISNS.
C     IENISN= POSITION I POINTS TO THE LAST PLACE IN IPTS ASSOCIATED
C             WITH THE ITH UNIQUE ROOT ISN. THIS ROUTINE SETS
C             THE VALUE OF IENISN(JISN) EQUAL TO -IENISN(JISN) AFTER
C             IT HAS REORDERED IPTS.  IF THE ROUTINE IS CALLED AGAIN
C             FOR A GIVEN JISN, THE REORDERING OF IPTS IS SKIPPED.
C
      CHARACTER CISNS(*)*11,CTEMP*11,CISN*4
C
      INTEGER IPTS(*),IENISN(*),ICBRK(*),ICYCS(*)
      INTEGER NRPTS,NCYC2,JISN,IIFST,ILST,I,J,I1,IC
C
C     ESTABLISH THE POINTERS TO THE BEGINNING AND END OF IPTS FOR
C     THIS ROOT STAND.
C
      IIFST=1
      IF (JISN.GT.1) IIFST=IABS(IENISN(JISN-1))+1
      ILST=IENISN(JISN)
C
C     IF THIS ROUTINE HAS BEEN CALLED FOR THIS JISN (IN OTHERWORDS,
C     IPTS HAS BEEN REORDERED WITHIN A ROOT ISN
C     THEN: RESET ILST AND GO FIND THE CYCLE BOUNDARIES.
C
      IF (ILST.GT.0) GOTO 10
      ILST=-ILST
      GOTO 40
   10 CONTINUE
C
C     ELSE: SET IENISN(JISN) NEGETIVE, AND PROCEED WITH THE
C     REORDERING PROCESS.
C
      IENISN(JISN)=-ILST
C
C     SAVE THE ROOT ISN
C
      I=IPTS(IIFST)
      CISN=CISNS(I)(1:4)
C
C     DEFINE A COMPOSITE NUMBER (STORED IN CISNS) FOR EACH ENTRY OF
C     CISNS COMPRIZING OF THE BRANCHING COMPONENT OF THE ISN AND THE
C     CORRESPONDING CYCLE NUMBER.
C
      DO 20 I=IIFST,ILST
      J=IPTS(I)
      WRITE (CISNS(J)(1:4),'(I4)') ICYCS(J)
   20 CONTINUE
C
C     ORDER IPTS TO ACCESS ISNS(IPTS(IIFST)) THRU ISNS(IPTS(ILST)) IN
C     ASSENDING ORDER.
C
      CALL C11SRT (ILST-IIFST+1,CISNS,IPTS(IIFST),.FALSE.)
C
C     RETURN CISNS TO ITS ORGINAL STATE
C
      DO 30 I=IIFST,ILST
      J=IPTS(I)
      CTEMP=CISN // CISNS(J)(5:11)
      CISNS(J)=CTEMP
   30 CONTINUE
   40 CONTINUE
C
C     FIND BREAKS DEFINING CYCLE BOUNDARIES.
C
      NCYC2=1
      ICBRK(1)=IIFST
      I1=IIFST+1
      IF (I1.LE.ILST) GOTO 50
      ICBRK(2)=ILST
      GOTO 70
   50 CONTINUE
      J=IPTS(IIFST)
      IC=ICYCS(J)
      DO 60 I=I1,ILST
      J=IPTS(I)
      IF (IC.EQ.ICYCS(J)) GOTO 60
      IC=ICYCS(J)
      NCYC2=NCYC2+1
      ICBRK(NCYC2)=I
   60 CONTINUE
   70 CONTINUE
C
C     COMPUTE THE NUMBER OF REPORTS, NRPTS, FOR JISN.
C
      NRPTS=ICBRK(NCYC2)-ICBRK(NCYC2-1)
      RETURN
      END
