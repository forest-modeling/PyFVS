      SUBROUTINE PPAUSE
      IMPLICIT NONE
C----------
C  **PPAUSE--PPBASE   DATE OF LAST REVISION:  07/31/08
C----------
C
C     PAUSE THE PARALLEL PROCESSOR BY WRITING ALL ITS DATA TO THE
C     ALL-DATA FILE.
C
C     PART OF THE PARALLEL PROCESSING EXTENSION OF PROGNOSIS SYSTEM.
C     N.L. CROOKSTON--FORESTRY SCIENCES LAB, MOSCOW, ID--JULY 1982
C
C     CALLED FROM: PPMAIN AND PPIN.
C
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'PPEPRM.F77'
C
C
      INCLUDE 'PPCNTL.F77'
C
C
      INCLUDE 'PPHVCM.F77'
C
C
      INCLUDE 'PPEXCM.F77'
C
C
      INCLUDE 'PPGPCM.F77'
C
C
      INCLUDE 'PPSPRD.F77'
C
C
      INCLUDE 'PPSPNB.F77'
C
C
      INCLUDE 'PPSPLA.F77'
C
C
      INCLUDE 'PPLLCM.F77'
C
C
      INCLUDE 'HVDNCM.F77'
C
C
      INCLUDE 'PPMDCM.F77'
C
C
      INCLUDE 'ARRAYS.F77'
C
C
COMMONS
C
      INTEGER NLOGIC,NREALS,NINTS,LNCBUF,IBEGIN,ILIMIT,IPNT,I,J,K,J1,J2
      LOGICAL LOGICS(NLOGIC)
      PARAMETER (NREALS=8,NLOGIC=36,NINTS=56)
      REAL REALS(NREALS),INTS(NINTS)
      EQUIVALENCE (REALS,WK6),(LOGICS,WK6),(INTS,WK6)
C
      PARAMETER (LNCBUF=IRECLN*4)
      CHARACTER*1 CBUFF(LNCBUF)
      EQUIVALENCE (WK6,CBUFF)
C
C     SIGNAL THAT THE HISTORY RECORDS ARE NOT IN MEMORY.
C
      LHIST=.FALSE.
      NMPRTD=0
C
C     SET UP POINTERS FOR WRITE.
C
      IBEGIN=IWTREC
      ILIMIT=IRECLN
      IF (ILIMIT.GT.MAXBUF) ILIMIT=MAXBUF
C
      IF (LRESTR) WRITE (JOPPRT,10) MICYC
   10 FORMAT(/' NOTE:  PROCESSING PAUSE AT THE END OF MASTER CYCLE',I3)
      IF (PDEBUG) WRITE (JOPPRT,20) NOSTND,IBEGIN,ILIMIT
   20 FORMAT (/' IN PPAUSE, NOSTND, IBEGIN, ILIMIT=',3I6)
C
C     LOAD AND WRITE THE INTEGERS.
C
      INTS(  1) = MNCYC
      INTS(  2) = MICYC
      INTS(  3) = ISTND
      INTS(  4) = NOSTND
      INTS(  5) = JLBWTS
      INTS(  6) = JOHIST
      INTS(  7) = INCYC
      INTS(  8) = IDAPRT
      INTS(  9) = NPTREC
      INTS( 10) = NAVPRT
      INTS( 11) = IASVPT
      INTS( 12) = IPTELS
      INTS( 13) = NMPRTD
      INTS( 14) = JCPCMP
      INTS( 15) = JCPSUM
      INTS( 16) = JOCOPY
      INTS( 17) = IPMODI
      INTS( 18) = LNSSPL
      INTS( 19) = LNSHPL
      INTS( 20) = NBYGRP
      INTS( 21) = NAUTID
      INTS( 22) = IMSREC
      INTS( 23) = IMSEND
      INTS( 24) = IXHRVP
      INTS( 25) = NPTST1
      INTS( 26) = NPTST2
      INTS( 27) = NPTST3
      INTS( 28) = MPTST1
      INTS( 29) = MPTST2
      INTS( 30) = NPEXCD
      INTS( 31) = MLPARM
      INTS( 32) = MXGPRM
      INTS( 33) = MIMGL
      INTS( 34) = MGPMAX
      INTS( 35) = MGPCUR
      INTS( 36) = NRDS
      INTS( 37) = NNBS
      INTS( 38) = NIDS
      INTS( 39) = NLAS
      INTS( 40) = IFRBEG
      INTS( 41) = IFREND
      INTS( 42) = INULL
      INTS( 43) = IHVEXT
C
C     MPB VARIABLES.
C
      INTS( 44) = JMPBPR
      INTS( 45) = MDSTND
      INTS( 46) = NDBHCL
      INTS( 47) = IMDYR1
      INTS( 48) = IMDYR2
      INTS( 49) = IMDYRT
      INTS( 50) = JMDVOL
      INTS( 51) = JMDDBH
      INTS( 52) = MXZNAB
      INTS( 53) = MRTYR1
      INTS( 54) = MRTYR2
      INTS( 55) = MRTCNT
      INTS( 56) = IDEDYR

      CALL IFWRIT (WK3,IPNT,ILIMIT,INTS,NINTS,1)
      CALL IFWRIT (WK3,IPNT,ILIMIT,MIY,MAXCY1,2)
      IF (NOSTND.GT.0) THEN
         DO 50 I=1,4
         CALL IFWRIT (WK3,IPNT,ILIMIT,ISNKEY(1,I),NOSTND,2)
   50    CONTINUE
         CALL IFWRIT (WK3,IPNT,ILIMIT,ISNSRT,NOSTND,2)
         CALL IFWRIT (WK3,IPNT,ILIMIT,IPMODE,NOSTND,2)
         CALL IFWRIT (WK3,IPNT,ILIMIT,LNSETS,NOSTND,2)
         CALL IFWRIT (WK3,IPNT,ILIMIT,ISDWK1,NOSTND,2)
         CALL IFWRIT (WK3,IPNT,ILIMIT,KEYLST(1,1),NOSTND,2)
         CALL IFWRIT (WK3,IPNT,ILIMIT,KEYLST(1,2),NOSTND,2)
      ENDIF
      IF (IXHRVP.GT.0) THEN
         DO 60 I=1,IXHRVP
         CALL IFWRIT (WK3,IPNT,ILIMIT,IHVSTA(1,I),NOSTND,2)
   60    CONTINUE
         CALL IFWRIT (WK3,IPNT,ILIMIT,IHVTAB(1,1),IXHRVP,2)
         CALL IFWRIT (WK3,IPNT,ILIMIT,IHVTAB(1,2),IXHRVP,2)
         CALL IFWRIT (WK3,IPNT,ILIMIT,IHVTAB(1,3),IXHRVP,2)
         CALL IFWRIT (WK3,IPNT,ILIMIT,LNHPLB(1,1),IXHRVP,2)
         CALL IFWRIT (WK3,IPNT,ILIMIT,LNHPLB(1,2),IXHRVP,2)
      ENDIF
      CALL IFWRIT (WK3,IPNT,ILIMIT,IPEXCD,NPEXCD,2)
      CALL IFWRIT (WK3,IPNT,ILIMIT,NBORD ,NNBS,2)
      CALL IFWRIT (WK3,IPNT,ILIMIT,NBID2 ,NIDS,2)
      CALL IFWRIT (WK3,IPNT,ILIMIT,LAORD ,NLAS,2)
      IF (IFRBEG.GT.1 .OR. IFREND.LT.MXLLSZ) THEN
         CALL IFWRIT (WK3,IPNT,ILIMIT,LKNEX,MXLLSZ,2)
         CALL IFWRIT (WK3,IPNT,ILIMIT,IELEM,MXLLSZ,2)
      ENDIF
      CALL IFWRIT (WK3,IPNT,ILIMIT,IUNLAB,IXHRVP,2)
C
C      MPB VARIABLES.
C
      CALL IFWRIT (WK3,IPNT,ILIMIT,MDHAB ,MDSTND,2)
      CALL IFWRIT (WK3,IPNT,ILIMIT,MDSDIX,MDSTND,2)
C
C     LOAD AND WRITE THE LOGICALS.
C
      LOGICS (  1) = LACTS
      LOGICS (  2) = LAREAS
      LOGICS (  3) = LASTIN
      LOGICS (  4) = LBWTS
      LOGICS (  5) = LCMPS
      LOGICS (  6) = LEORUN
      LOGICS (  7) = LEXPON
      LOGICS (  8) = LHIST
      LOGICS (  9) = LHVALL
      LOGICS ( 10) = LHVDEB
      LOGICS ( 11) = LHVMXC
      LOGICS ( 12) = LHVUNT
      LOGICS ( 13) = LIN1ST
      LOGICS ( 14) = LMCYC
      LOGICS ( 15) = LMDDBH
      LOGICS ( 16) = LMDDEB
      LOGICS ( 17) = LMDSPR
      LOGICS ( 18) = LMDVOL
      LOGICS ( 19) = LMINT
      LOGICS ( 20) = LNEAR
      LOGICS ( 21) = LNEDNG
      LOGICS ( 22) = LPRTCT
      LOGICS ( 23) = LRESTR
      LOGICS ( 24) = LSMPT
      LOGICS ( 25) = LSNDCP
      LOGICS ( 26) = LSTYR
      LOGICS ( 27) = LSUM
      LOGICS ( 28) = LTMPAC
      LOGICS ( 29) = LTMPAD
      LOGICS ( 30) = PDEBUG
      LOGICS ( 31) = LHIER
C
C     MOUNTAIN PINE BEETLE VARIABLES.
C
      LOGICS ( 32) = LMDDEB
      LOGICS ( 33) = LNEAR
      LOGICS ( 34) = LMDSPR
      LOGICS ( 35) = LMDVOL
      LOGICS ( 36) = LMDDEB
C
C     WRITE THE LOGICAL SCALARS.
C
      CALL LFWRIT (WK3,IPNT,ILIMIT,LOGICS,NLOGIC,2)
C
C     WRITE THE LOGICAL ARRAYS.
C
      CALL LFWRIT (WK3,IPNT,ILIMIT,LHVOUT,IXHRVP,2)
      CALL LFWRIT (WK3,IPNT,ILIMIT,LMOPEN,MIMGL,2)
      CALL LFWRIT (WK3,IPNT,ILIMIT,LPAUSE,MAXCYC,2)
      CALL LFWRIT (WK3,IPNT,ILIMIT,LPTST1,10,2)
      CALL LFWRIT (WK3,IPNT,ILIMIT,LPTST2,10,2)
C
C     LOAD AND WRITE THE REALS  (ARRAYS FIRST).
C
      CALL BFWRIT (WK3,IPNT,ILIMIT,BRCHWT,NOSTND,2)
      CALL BFWRIT (WK3,IPNT,ILIMIT,AREAS,NOSTND,2)
      CALL BFWRIT (WK3,IPNT,ILIMIT,SAMWTS,NOSTND,2)
      CALL BFWRIT (WK3,IPNT,ILIMIT,HVPART,IXHRVP,2)
      CALL BFWRIT (WK3,IPNT,ILIMIT,PTSTV1,10,2)
      CALL BFWRIT (WK3,IPNT,ILIMIT,PTSTV2,NPTST2,2)
      CALL BFWRIT (WK3,IPNT,ILIMIT,PTSTV3,NPTST3,2)
      CALL BFWRIT (WK3,IPNT,ILIMIT,GPARMS ,MLPARM,2)
      CALL BFWRIT (WK3,IPNT,ILIMIT,RDDIST ,NRDS,2)
      CALL BFWRIT (WK3,IPNT,ILIMIT,BORDER ,NNBS,2)
      CALL BFWRIT (WK3,IPNT,ILIMIT,EDGE   ,NIDS,2)
      CALL BFWRIT (WK3,IPNT,ILIMIT,AREA   ,NLAS,2)
      CALL BFWRIT (WK3,IPNT,ILIMIT,XLOC   ,NLAS,2)
      CALL BFWRIT (WK3,IPNT,ILIMIT,YLOC   ,NLAS,2)
C
C     MOUNTAIN PINE BEETLE VARIABLES.
C
      IF (MRTCNT.GT.0) THEN
         CALL BFWRIT (WK3,IPNT,ILIMIT,PRBMPB,MRTCNT,2)
         CALL BFWRIT (WK3,IPNT,ILIMIT,VOLDED,MRTCNT,2)
         CALL BFWRIT (WK3,IPNT,ILIMIT,VOLNHS,MRTCNT,2)
         CALL BFWRIT (WK3,IPNT,ILIMIT,SADLPP,MRTCNT,2)
         CALL BFWRIT (WK3,IPNT,ILIMIT,ELEVMD,MRTCNT,2)
         DO 210 I=1,8
         CALL BFWRIT (WK3,IPNT,ILIMIT,GRNLP(1,I),MRTCNT,2)
         CALL BFWRIT (WK3,IPNT,ILIMIT,PHLOEM(1,I),MRTCNT,2)
         CALL BFWRIT (WK3,IPNT,ILIMIT,VOLLP(1,I),MRTCNT,2)
         CALL BFWRIT (WK3,IPNT,ILIMIT,ZNUDED(1,I),MRTCNT,2)
         CALL BFWRIT (WK3,IPNT,ILIMIT,CUMDED(1,I),MRTCNT,2)
         CALL BFWRIT (WK3,IPNT,ILIMIT,DEDLP(1,I),MRTCNT,2)
  210    CONTINUE
         CALL BFWRIT (WK3,IPNT,ILIMIT,PRNOIN,7,2)
         CALL BFWRIT (WK3,IPNT,ILIMIT,ZINMOR,7,2)
         CALL BFWRIT (WK3,IPNT,ILIMIT,ZMXMOR,7,2)
      ENDIF
      REALS (  1) = DCTOP
      REALS (  2) = DCTPA
      REALS (  3) = HVMXCC
      REALS (  4) = HXSIZE
C
C     MPB VARIABLES.
C
      REALS (  5) = TACRES
      REALS (  6) = RNGSHT
      REALS (  7) = RNGLNG
      REALS (  8) = PLONG
      CALL BFWRIT (WK3,IPNT,ILIMIT,REALS,NREALS,3)
C
C     WRITE THE CHARACTER DATA.
C
      K=1
      DO 300 I=1,4
      CALL CHWRIT (CBUFF,IPNT,LNCBUF,CAUTID(I:I),K)
      K=2
      CALL CHWRIT (CBUFF,IPNT,LNCBUF,CLBWID(I:I),2)
      CALL CHWRIT (CBUFF,IPNT,LNCBUF,CMPID(I:I),2)
      CALL CHWRIT (CBUFF,IPNT,LNCBUF,MGM1(I:I),2)
      CALL CHWRIT (CBUFF,IPNT,LNCBUF,MGM2(I:I),2)
      CALL CHWRIT (CBUFF,IPNT,LNCBUF,NSET(I:I),2)
  300 CONTINUE
      DO 310 I=1,26
      CALL CHWRIT (CBUFF,IPNT,LNCBUF,NOTSET(I:I),2)
      CALL CHWRIT (CBUFF,IPNT,LNCBUF,SID1(I:I),2)
      CALL CHWRIT (CBUFF,IPNT,LNCBUF,SID2(I:I),2)
  310 CONTINUE
      DO 311 I=1,11
      CALL CHWRIT (CBUFF,IPNT,LNCBUF,CLISN(I:I),2)
      CALL CHWRIT (CBUFF,IPNT,LNCBUF,CSISN(I:I),2)
  311 CONTINUE
      IF (LNSHPL.GT.0) THEN
         DO 312 I=1,LNSHPL
         CALL CHWRIT (CBUFF,IPNT,LNCBUF,SLHPLB(I:I),2)
  312    CONTINUE
      ENDIF
      IF (LNSSPL.GT.0) THEN
         DO 315 I=1,LNSSPL
         CALL CHWRIT (CBUFF,IPNT,LNCBUF,SLSPLB(I:I),2)
  315    CONTINUE
      ENDIF
      IF (NOSTND.GT.0) THEN
         DO 325 J=1,NOSTND
         DO 320 I=1,11
         CALL CHWRIT (CBUFF,IPNT,LNCBUF,CISNUM(J)(I:I),2)
  320    CONTINUE
         DO 321 I=1,4
         CALL CHWRIT (CBUFF,IPNT,LNCBUF,MGMIDS(J)(I:I),2)
  321    CONTINUE
         DO 322 I=1,26
         CALL CHWRIT (CBUFF,IPNT,LNCBUF,STDIDS(J)(I:I),2)
  322    CONTINUE
         IF (LNSETS(J).GT.0) THEN
            DO 323 I=1,LNSETS(J)
            CALL CHWRIT (CBUFF,IPNT,LNCBUF,SLSETS(J)(I:I),2)
  323       CONTINUE
         ENDIF
  325    CONTINUE
      ENDIF
      IF (LHVALL) THEN
         DO 330 J=1,IXHRVP
         IF (IHVTAB(J,1).GT.0) THEN
            DO 329 I=1,LNHPLB(J,1)
            CALL CHWRIT (CBUFF,IPNT,LNCBUF,HVPLAB(J)(I:I),2)
  329       CONTINUE
         ENDIF
  330 CONTINUE
      ENDIF
      IF (NLAS.GT.0) THEN
         DO 335 J=1,NLAS
         DO 335 I=1,26
         CALL CHWRIT (CBUFF,IPNT,LNCBUF,CLAID(J)(I:I),2)
 335     CONTINUE
      ENDIF
      IF (NIDS.GT.0) THEN
         DO 337 J=1,NIDS
         DO 337 I=1,26
         CALL CHWRIT (CBUFF,IPNT,LNCBUF,CNBID1(J)(I:I),2)
         CALL CHWRIT (CBUFF,IPNT,LNCBUF,CNBID2(J)(I:I),2)
  337    CONTINUE
      ENDIF
      IF (NRDS.GT.0) THEN
         DO 338 J=1,NRDS
         DO 338 I=1,26
         CALL CHWRIT (CBUFF,IPNT,LNCBUF,CRDID(J)(I:I),2)
  338    CONTINUE
      ENDIF
      IF (NPTST2.GT.0) THEN
         DO 339 J=1,NPTST2
         DO 339 I=1,8
         CALL CHWRIT (CBUFF,IPNT,LNCBUF,CPTST2(J)(I:I),2)
  339    CONTINUE
      ENDIF
      IF (MRTCNT.GT.0) THEN
         DO 345 J=1,MRTCNT
         DO 340 I=1,8
         CALL CHWRIT (CBUFF,IPNT,LNCBUF,MDSTDS(J)(I:I),2)
  340    CONTINUE
         DO 345 I=1,4
         CALL CHWRIT (CBUFF,IPNT,LNCBUF,MDMGID(J)(I:I),2)
  345    CONTINUE
      ENDIF
      CALL DBSPUSPUT (CBUFF,IPNT,LNCBUF)
      CALL CHWRIT (CBUFF,IPNT,LNCBUF,' ',3)
C
C     WRITE THE ALL-DATA DIRECT ACCESS POINTERS.
C
      I=1
      J2=IRECLN-5
      IF (J2.GT.NDAREC) J2=NDAREC
      J1=1
      IF (PDEBUG) WRITE (JOPPRT,480) I,NDAREC,J1,J2
  480 FORMAT (' IN PPAUSE, RECORD= ',I6,' NDAREC=',I6,' J1=',I6,
     >        ' J2=',I6)
      WRITE (IDAIO(1),REC=I) IBEGIN,IOSTRC,IWTREC,IAVAIL,IENDFR,
     >                       (INEXR(J),J=J1,J2)
  490 CONTINUE
      I=I+1
      J1=J2+1
      J2=J2+IRECLN
      IF (J2.GT.NDAREC) J2=NDAREC
      IF (PDEBUG) WRITE (JOPPRT,480) I,NDAREC,J1,J2
      WRITE (IDAIO(1),REC=I) (INEXR(J),J=J1,J2)
      IF (J2.LT.NDAREC) GOTO 490
      IF (PDEBUG) WRITE (JOPPRT,500) IBEGIN,IOSTRC
  500 FORMAT (' IN PPAUSE: IBEGIN, IOSTRC=',2I6)
      RETURN
      END
