      SUBROUTINE BYGRPS (NSEL,NOUT,LSTYLD,LDONE)
      IMPLICIT NONE
C----------
C  **BYGRPS--PPBASE   DATE OF LAST REVISION:  07/31/08              
C----------
C
C     PART OF THE PARALLEL PROCESSING EXTENSION OF PROGNOSIS SYSTEM.
C     N.L. CROOKSTON--FORESTRY SCIENCES LAB, MOSCOW, ID--SEPT 1987.
C
C     CALLED FROM YIELDS
C
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'PPEPRM.F77'
C
C
      INCLUDE 'ARRAYS.F77'
C
C
      INCLUDE 'PPCNTL.F77'
C
C
      INCLUDE 'PPHVCM.F77'
C
C
      INCLUDE 'OPCOM.F77'
C
C
COMMONS
C
      INTEGER LSTYLD(MXSTND),NOUT,NSEL,IBOT,ITOP,I1,I,N,KODE
      INTEGER LNWRK1,LNWRK2,LNWKS1
      LOGICAL LDONE,LBMEMR
      SAVE ITOP,IBOT
C
C     IF LDONE IS TRUE WHEN THIS ROUTINE IS CALLED, THEN THE CALL
C     IS THE FIRST ONE FOR THIS YIELDS STATEMENT...IF IT IS FALSE
C     THEN THIS ROUTINE HAS BEEN CALLED.  SET LDONE=.FALSE. IF THIS
C     ROUTINE NEEDS TO BE RECALLED AND SET IT TRUE IF IT DOES NOT
C     HAVE TO BE RECALLED (WHEN ALL POINTERS IN ISNSRT HAVE BEEN
C     PROCESSED).
C
      IF (.NOT.LDONE) GOTO 80
      LDONE=.FALSE.
C
C     BRANCH TO INITIALIZATION CODE FOR EACH OF THE BYCCCCC
C     OPTIONS.
C
      GOTO (1,10,20,30,40),NBYGRP+1
    1 CONTINUE
      CALL C26SRT (NSEL,STDIDS,ISNSRT,.FALSE.)
      I1=1
      DO 4 I=1,NSEL
      IF (STDIDS(ISNSRT(I)).EQ.STDIDS(ISNSRT(I1)) .AND.
     >    I.LT.NSEL) GOTO 4
      N=I-I1
      IF (I.EQ.NSEL) N=N+1
      CALL C11SRT (N,CISNUM,ISNSRT(I1),.FALSE.)
      I1=I
    4 CONTINUE
      DO 5 I=1,NSEL
      LSTYLD(I)=ISNSRT(I)
    5 CONTINUE
      NOUT=NSEL
      GOTO 9000
   10 CONTINUE
C
C     INITIALIZE THE VARIABLES FOR THE BYSTAND OPTION.
C
      ITOP=0
      IBOT=0
      CALL C26SRT (NSEL,STDIDS,ISNSRT,.FALSE.)
      GOTO 100
   20 CONTINUE
C
C     INITIALIZE THE VARIABLES FOR THE BYMGMID OPTION.
C
      ITOP=0
      IBOT=0
      CALL CH4SRT (NSEL,MGMIDS,ISNSRT,.FALSE.)
      GOTO 200
   30 CONTINUE
C
C     INITIALIZE THE VARIABLES FOR THE BYSPLAB OPTION.
C
C     CREATE A UNION OVER ALL OF THE STAND POLICY LABEL SETS
C     IN THE LIST OF STANDS THAT FORM THE "SEL" CONDITIONS.
C
C     LET ITOP BE THE LENGTH OF THE UNION...AND LET IBOT
C     BE A POINTER TO THE FIRST POSITION OF THE FIRST MEMBER...
C     (THE ENDING RULE WILL BE IBOT>ITOP).
C
      IBOT=1
      ITOP=0
C
C     IF THE SELSPLAB OPTION IS IN USE, THEN THE SET OF STAND
C     POLICIES THAT WILL BE PROCESSED IS THE SET DEFINED IN THE
C     SELSPLAB OPTION.
C
      IF (LNSSPL.GT.0) THEN
         ITOP  =LNSSPL
      ELSE
C
C        THE SET OF STAND POLICIES IS TAKEN TO BE THE UNION OVER
C        ALL STAND POLICY LABELS IN ALL STANDS ...
C
         I1=0
         DO 35 I=1,NSEL
         IF (LNSETS(ISNSRT(I)).GT.0) THEN
            CALL LBUNIN (LNSSPL,SLSPLB,LNSETS(ISNSRT(I)),
     >                   SLSETS(ISNSRT(I)),LNWRK1,WKSTR1,KODE)
            IF (KODE.GT.0) THEN
               CALL LBINTR (LNWRK1,WKSTR1,LNSETS(ISNSRT(I)),
     >                      SLSETS(ISNSRT(I)),LNWRK2,WKSTR2,KODE)
               IF (I1.EQ.0) THEN
                   WRITE (JOPPRT,31) WKSTR2(1:LNWRK2)
   31              FORMAT (/' NOTE: BYSPLAB CANNOT PROCESS ALL ',
     >                     'POLICIES.  THE FOLLOWING WILL NOT BE ',
     >                     'PROCESSED:'/T8,A)
                   I1=1
               ELSE
                   WRITE (JOPPRT,'(T8,A)') WKSTR2(1:LNWRK2)
               ENDIF
            ENDIF
            ITOP  =LNWRK1
            LNSSPL=ITOP
            SLSPLB=WKSTR1
         ENDIF
         IF (PDEBUG) WRITE (JOPPRT,32) I,ISNSRT(I),ITOP,IBOT,
     >      LNSETS(ISNSRT(I)),SLSPLB(1:ITOP)
   32    FORMAT (' IN BYGRPS: I=',I4,' ISNSRT(I)=',I4,
     >      ' ITOP,IBOT=',2I4,' LNSETS=',I4/T13,'SLSPLB=',A)
   35    CONTINUE
      ENDIF
      GOTO 300
   40 CONTINUE
C
C     INITIALIZE THE VARIABLES FOR THE BYMSPLB OPTION.
C
      ITOP=0
      GOTO 400
C
C     **********************************
C
   80 CONTINUE
C
C     **********************************
C
C     BRANCH TO PROCESSING CODE FOR EACH OF THE BYCCCCC
C     OPTIONS
C
      GOTO (90,100,200,300,400),NBYGRP+1
   90 CONTINUE
C
C     FOR THE NOBYGRPS OPTION, SIMPLY SIGNAL THAT THE JOB IS DONE.
C
      LDONE=.TRUE.
      GOTO 9000
  100 CONTINUE
C
C     PROCESS THE BYSTAND OPTION.
C
      ITOP=IBOT+1
      IF (ITOP.GT.NSEL) THEN
         LDONE=.TRUE.
      ELSE
         DO 130 I=ITOP,NSEL
         IF (STDIDS(ISNSRT(I)).EQ.STDIDS(ISNSRT(ITOP)) .AND.
     >       I.LT.NSEL) GOTO 130
         IBOT=I-1
         IF (I.GE.NSEL) IBOT=NSEL
         CALL C11SRT (IBOT-ITOP+1,CISNUM,ISNSRT(ITOP),.FALSE.)
         NOUT=0
         DO 110 I1=ITOP,IBOT
         NOUT=NOUT+1
         LSTYLD(NOUT)=ISNSRT(I1)
  110    CONTINUE
         WRITE (JOPPRT,120) STDIDS(ISNSRT(ITOP)),NOUT
  120    FORMAT (/' NOTE:  PROCESSING BYSTAND= ',A26,'; THERE ARE ',
     >           I4,' STANDS IN THIS GROUP.')
         GOTO 9000
  130    CONTINUE
      ENDIF
      GOTO 9000
  200 CONTINUE
C
C     PROCESS THE BYMGMID OPTION.
C
      ITOP=IBOT+1
      IF (ITOP.GT.NSEL) THEN
         LDONE=.TRUE.
      ELSE
         DO 230 I=ITOP,NSEL
         IF (MGMIDS(ISNSRT(I)).EQ.MGMIDS(ISNSRT(ITOP)) .AND.
     >       I.LT.NSEL) GOTO 230
         IBOT=I-1
         IF (I.GE.NSEL) IBOT=NSEL
         CALL C11SRT (IBOT-ITOP+1,CISNUM,ISNSRT(ITOP),.FALSE.)
         NOUT=0
         DO 210 I1=ITOP,IBOT
         NOUT=NOUT+1
         LSTYLD(NOUT)=ISNSRT(I1)
  210    CONTINUE
         WRITE (JOPPRT,220) MGMIDS(ISNSRT(ITOP)),NOUT
  220    FORMAT (/' NOTE:  PROCESSING BYMGMID= ',A4,
     >          '; THERE ARE ',I4,' STANDS IN THIS GROUP.')
         GOTO 9000
  230    CONTINUE
      ENDIF
      GOTO 9000
  300 CONTINUE
C
C     PROCESS THE BYSPLAB OPTION.
C     ALL HAVE BEEN PROCESSED IF IBOT>ITOP...
C
      IF (IBOT.GT.ITOP) THEN
         LDONE=.TRUE.
      ELSE
C
C        GET THE NEXT MEMBER OF SLSPLB...
C
         CALL LB1MEM (IBOT,ITOP,SLSPLB,LNWKS1,WKSTR1)
C
C        LOOP OVER THE STANDS...AND BUILD A LIST THAT CONTAINS
C        THE MEMBER STORED IN WKSTR1.
C
         NOUT=0
         DO 310 I=1,NSEL
         IF (LBMEMR(LNWKS1,WKSTR1,LNSETS(ISNSRT(I)),
     >              SLSETS(ISNSRT(I)))) THEN
            NOUT=NOUT+1
            LSTYLD(NOUT)=ISNSRT(I)
         ENDIF
  310    CONTINUE
         WRITE (JOPPRT,320) WKSTR1(1:LNWKS1),NOUT
  320    FORMAT (/' NOTE:  PROCESSING BYSPLAB= ',A/T9,
     >            'THERE ARE ',I4,' STANDS IN THIS GROUP.')
C
C        INCREMENT IBOT TO POINT TO THE NEXT PART OF THE SET.
C
         IBOT=IBOT+LNWKS1+2
C
C        IF NOUT=0, THEN NO STANDS APPLY TO THE STAND POLICY.
C
         IF (NOUT.EQ.0) GOTO 300
      ENDIF
      GOTO 9000
  400 CONTINUE
C
C     PROCESS THE BYMSPLB.
C
C     IF THE SELMSPLB OPTION HAS BEEN SPECIFIED, THEN ...
C
      IF (LNSHPL.GT.0) THEN
C
C        SORT THE SELECTED STANDS AND RETURN.  IF THIS HAS BEEN
C        DONE, THEN SET LDONE TRUE AND RETURN.
C
         IF (ITOP.GT.0) THEN
            LDONE=.TRUE.
            GOTO 9000
         ELSE
            DO 405 I=1,NSEL
            LSTYLD(I)=ISNSRT(I)
  405       CONTINUE
            NOUT=NSEL
         ENDIF
      ELSE
C
C        ELSE...GO THROUGH ALL OF THE MULTI STAND POLICIES.
C
  410    CONTINUE
         ITOP=ITOP+1
         IF (ITOP.GT.IXHRVP) THEN
            LDONE=.TRUE.
            GOTO 9000
         ELSE
C
C           IF THE CURRENT MULTISTAND POLICY HAS BEEN TURNED OFF,
C           BRANCH TO CONSIDER THE NEXT ONE.
C
            IF (IHVTAB(ITOP,1).EQ.0) GOTO 410
C
C           IF HIERARCHIES ARE BEING USED, DON'T GROUP ON THE
C           FIRST POLICY.
C
            IF (LHIER.AND.ITOP.EQ.1) GOTO 410
C
C           CREATE A LIST OF STANDS THAT APPLY TO THIS MULTISTAND
C           POLICY OUT OF THE STANDS THAT MET THE "SEL" CONDITIONS.
C
            NOUT=0
            DO 420 I=1,NSEL
            IF (IHVSTA(ISNSRT(I),ITOP).NE.0) THEN
               NOUT=NOUT+1
               LSTYLD(NOUT)=ISNSRT(I)
            ENDIF
  420       CONTINUE
C
C           IF NOUT=0, NO STANDS APPLY TO THE CURRENT MULTISTAND
C           POLICY.  WRITE A MSG AND BY ON.
C
            IF (NOUT.EQ.0) THEN
               WRITE (JOPPRT,460) HVPLAB(ITOP)(1:LNHPLB(ITOP,1)),0
               GOTO 410
            ENDIF
         ENDIF
      ENDIF
C
C     SORT THIS LIST OF STANDS ON THE STANDID AND ISN.
C
      CALL C26SRT (NOUT,STDIDS,LSTYLD,.FALSE.)
      I1=1
      DO 450 I=1,NOUT
      IF (STDIDS(LSTYLD(I)).EQ.STDIDS(LSTYLD(I1)) .AND.
     >    I.LT.NOUT) GOTO 450
      N=I-I1
      IF (I.EQ.NOUT) N=N+1
      CALL C11SRT (N,CISNUM,LSTYLD(I1),.FALSE.)
      I1=I
  450 CONTINUE
C
C     WRITE A MESSAGE IDENTIFING THE GROUP BEING PROCESSED
C
      WRITE (JOPPRT,460) HVPLAB(ITOP)(1:LNHPLB(ITOP,1)),NOUT
  460 FORMAT (/' NOTE:  PROCESSING BYMSPLB= ',A,'; THERE ARE ',
     >       I4,' STANDS IN THIS GROUP.')
 9000 CONTINUE
      RETURN
      END
