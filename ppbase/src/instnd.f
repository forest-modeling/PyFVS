      SUBROUTINE INSTND
      IMPLICIT NONE
C----------
C  **INSTND--PPBASE  DATE OF LAST REVISION:  07/31/08
C----------
C
C     INPUTS AND INITIATES ONE STAND.
C
C     PART OF THE PARALLEL PROCESSING EXTENSION OF PROGNOSIS SYSTEM.
C     N.L. CROOKSTON--FORESTRY SCIENCES LAB, MOSCOW, ID--SEPT 1979
C
C     CALLED FROM: PPMAIN
C
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'PPEPRM.F77'
C
C
      INCLUDE 'ARRAYS.F77'
C
C
      INCLUDE 'CONTRL.F77'
C
C
      INCLUDE 'OUTCOM.F77'
C
C
      INCLUDE 'PLOT.F77'
C
C
      INCLUDE 'PPCNTL.F77'
C
C
      INCLUDE 'OPCOM.F77'
C
C
      INCLUDE 'WORKCM.F77'
C
C
COMMONS
C
      LOGICAL LESATV,LCVGO,LFMGO
      INTEGER IUSR,I,J,IA,N,K
C
      ISTND=ISTND+1
      IF (ISTND .GT. MXSTND) CALL PPERRP(.FALSE.,4)
      NOSTND=ISTND
C
C     ADD THE CURRENT STAND NUMBER TO ALL OPEN GLOBAL OPTIONS.
C
      CALL GPADSD (ISTND)
C
C     INITATE THE STAND.
C
      LSTART=.TRUE.
C
C     SET ICL1 EQUAL TO JADFIL (USED WITH ADDFILE KEYWORD).
C
      ICL1 = JADFIL
      IF (PDEBUG) WRITE (JOPPRT,1) ISTND
    1 FORMAT (/' IN INSTND, CALLING INITRE, ISTND =',I4)
      CALL INITRE
C
C     SET JADFIL EQUAL TO ICL1 (USED WITH ADDFILE KEYWORD).
C
      JADFIL = ICL1
C
C     STORE THE STAND ID AND MANAGEMENT ID.  IF LABEL PROCESSING IS
C     ACTIVE, STORE THE LABEL SETS ALSO.
C
      STDIDS(ISTND)=NPLT
      MGMIDS(ISTND)=MGMID
      IF (LBSETS) THEN
         SLSETS(ISTND)=SLSET
         LNSETS(ISTND)=LENSLS
      ELSE
         SLSETS(ISTND)=' '
         LNSETS(ISTND)=-1
      ENDIF
C
C     IF STAND TEMPLATING IS ACTIVE, ADD THIS STANDS OPTIONS
C     TO THE STAND TEMPLATE.
C
      IF (LTMPAD) CALL MSTRPT
C
C     NOTE: IF WE WANT TO ONLY USE THIS STAND'S OPTIONS AS A TEMPLATE
C     AND NOT ALLOW OPTIONS ADDED IN LATER STANDS TO BE ADDED TO THE
C     TEMPLATE (THEY WOULD ONLY APPLY TO THE STAND THEY ARE ADDED TO)
C     THEN ADD A STATEMENT HERE SETTING LTMPAD=.FALSE.
C
      LTMPAD=.FALSE.
C
C     IF THIS IS THE FIRST STAND, INSURE THAT THE MASTER TIME
C     INTERVALS, NUMBER OF CYCLES, AND STARTING YEAR HAVE BEEN DEFINED.
C
      IF (ISTND.EQ.1) CALL MSTIME
C
C     IF NCYC IS LE 0, THEN THE USER HAS NOT DEFINED THE NUMBER OF
C     CYCLES.  SET IT EQUAL TO THE NUMBER OF MASTER CYCLES.
C
      IF (NCYC.LE.0) NCYC=MNCYC
      IF (NCYC.GT.MAXCYC) NCYC=MAXCYC
C
C     IF THIS STAND'S INVENTORY YEAR IS GREATER THAN THE MASTER STARTIN
C     YEAR, THEN: ISSUE ERROR 18, AND STOP
C
      IF (IY(1).GT.MIY(1)) CALL PPERRP (.FALSE.,5)
C
C     IF THE USER HAS DEFINED ANY MEMBERS OF IY, SET THE OTHERS EQUAL
C     TO 10.
C
      IUSR=0
      DO 3 I=2,41
      IF (IY(I).NE.-1) THEN
         IUSR=1
         DO 2 J=2,41
         IF (IY(J).EQ.-1) IY(J)=10
    2    CONTINUE
         GOTO 4
      ENDIF
    3 CONTINUE
    4 CONTINUE
C
C     IF THE USER HAS NOT DEFINED THE YEARS, THEN THE PROGRAM DEFINES
C     THEM TO BE EQUAL TO THE MASTER CYCLE WHEN THE MASTER CYCLES ARE
C     LESS THAN 16 YEARS LONG.  IF THE MASTER CYCLES ARE OVER 15 YEARS
C     LONG, 10 YEAR-LONG CYCLES ARE CREATED TO FULL THE MASTER CYCLES.
C
      IF (IUSR.EQ.0) THEN
         NCYC=1
         DO 10 J=1,MNCYC+1
    5    CONTINUE
         IF (IY(NCYC).LT.MIY(J)) THEN
            NCYC=NCYC+1
            IF (NCYC.GT.MAXCYC) CALL PPERRP (.FALSE.,6)
            IF (MIY(J)-IY(NCYC-1).GE.16) THEN
               IY(NCYC)=IY(NCYC-1)+10
            ELSE
               IY(NCYC)=MIY(J)
            ENDIF
            GOTO 5
         ENDIF
   10    CONTINUE
      ELSE
C
C        ELSE, SIMPLY CHANGE ARRAY IY INTO A VECTOR OF DATES.
C
         DO I=2,MAXCY1
           IY(I)=IY(I-1)+IY(I)
         ENDDO
      ENDIF
C
C     ADD IN CYCLES FOR REQUESTED YEARS...BUT DON'T EXTEND THE END
C     OR CHANGE THE BEGINNING OF THE SIMULATION.
C
      IF (IWORK1(1).GT.0) THEN
        DO IA=2,IWORK1(1)+1
          IF (IWORK1(IA).LE.IY(1).OR.IWORK1(IA).GE.IY(NCYC+1)) THEN
            CYCLE
          ELSE
            N=NCYC
            DO I=1,N
              IF (IWORK1(IA).GT.IY(I).AND.IWORK1(IA).LT.IY(I+1)) THEN
                NCYC=NCYC+1
                IF (NCYC.GT.MAXCYC) NCYC=MAXCYC
                DO K=NCYC+1,I+2,-1
                  IY(K)=IY(K-1)
                ENDDO
                IY(I+1)=IWORK1(IA)
                EXIT
              ENDIF
            ENDDO
          ENDIF
        ENDDO
      ENDIF
C
C     WRITE BUG MODEL HEADERS AND WRITE AND PROCESS OPTION LISTS
C
      CALL MPBOPS
      CALL TMOPS
      CALL DFBSCH
C
C     INSURE THAT THE CURRENT STAND'S CYCLING INCLUDES THE MASTER
C     CYCLING.
C
      ICYC = 1
      CALL SCHED
C
C
C     SET UP ECON COST & REVENUE INDEXES BY SPECIES
C     CALL ECSETP PRIOR TO PROCESSING ACTIVITY SCHEDULE TO ENSURE CORRECT ECON ACTIVITY SORTING
C
      CALL ECSETP(IY)
C
C     PROCESS AND LIST THE ACTIVITY SCHEDULE.
C
      CALL OPEXPN (JOSTND,NCYC,IY)
      CALL OPCYCL (NCYC,IY)
      CALL OPLIST (.TRUE.,NPLT,MGMID,ITITLE)
C
C     SET UP INDEX POINTERS TO SPECIES SORT.
C
      CALL SETUP
C
C     CALCULATE TREES/ACRE ( = LOAD PROB )
C
      CALL NOTRE
C
C     WESTERN ROOT DISEASE MODEL INITIALIZATION
C
      CALL RDMN1 (1)
C
C     COMPUTE DEAD LPP/ACRE.
C
      CALL MPSDLP
C
C     COMPUTE DEAD DFB/ACRE
C
      CALL DFBINV
C
C     INITIALIZE THE DATA BASE CONNECTION (ONLY DONE IF NEEDED)
C
      CALL DBSCASE (0)
C
      ICYC=1
C
C     SET THE OPTION POINTERS FOR THE INITIALIZATION PHASE TO
C     THE CYCLE 1 OPTIONS.
C
      CALL OPCSET(ICYC)
C
C     CALIBRATE GROWTH FUNCTIONS AND FILL GAPS IN INVENTORY DATA.
C
      CALL CRATET
C
C     SET CALIBRATION AND FLAG BEST TREE RECORDS FOR ESTAB MODEL
C
      CALL ESFLTR
C
C     ADD INITIAL SNAGS TO THE FIRE MODEL
C
      CALL FMATV(LFMGO)
      IF (LFMGO) CALL FMSADD(IY(1)-IFIX(FINTM),3)
C
      ICYC = 0
C
C     SET UP INTERNAL STAND NUMBER AND STORE IN CISNUM.
C     STORE STAND IDENTIFICATIONS AND STAND SAMPLING PROBABILITY.
C
      WRITE (CISNUM(ISTND),'(I4,''0000000'')') ISTND
      ISNKEY(ISTND,4)=0
      BRCHWT(ISTND)=1.0
      SAMWTS(ISTND)=SAMWT
      ISNSRT(ISTND)=ISTND
C
C     COMPUTE INITIAL CROWN WIDTH VALUES.
C
      CALL CWIDTH
C
C     COMPUTE INITIAL VOLUME STATISTICS
C
      CALL VOLS
C
C     COMPUTE INITIAL PERCENTILE POINTS IN THE DISTRIBUTION OF
C     DIAMETERS FOR ALL VOLUME STANDARDS.  FIRST CONVERT VOLUMES TO A
C     PER ACRE REPRESENTATION.
C
      IF (ITRN.LE.0) GOTO 25
      DO 20 I=1,ITRN
      CFV(I)=CFV(I)*PROB(I)
      BFV(I)=BFV(I)*PROB(I)
      WK1(I)=WK1(I)*PROB(I)
   20 CONTINUE
   25 CONTINUE
      CALL PCTILE(ITRN,IND,CFV,WK3,OCVCUR(7))
      CALL DIST(ITRN,OCVCUR,WK3)
      CALL PCTILE(ITRN,IND,BFV,WK3,OBFCUR(7))
      CALL DIST(ITRN,OBFCUR,WK3)
      CALL PCTILE(ITRN,IND,WK1,WK3,OMCCUR(7))
      CALL DIST(ITRN,OMCCUR,WK3)
C
C     NOW CONVERT CFV TO A PER TREE REPRESENTATION.
C
      IF (ITRN.LE.0) GOTO 35
      DO 30 I=1,ITRN
      CFV(I)=CFV(I)/PROB(I)
      BFV(I)=BFV(I)/PROB(I)
      WK1(I)=WK1(I)/PROB(I)
   30 CONTINUE
   35 CONTINUE
C
C     ASSIGN THE EXAMPLE TREES TO THE OUTPUT ARRAYS.
C
      CALL EXTREE
C
C     FIND OUT IF THE COVER MODEL WILL BE CALLED.
C
      CALL CVGO (LCVGO)
C
C     CALL **CVBROW** TO COMPUTE SHRUB DENSITY AND WILDLIFE BROWSE
C     STATISTICS.
C
      IF (PDEBUG) WRITE(JOPPRT,9000) ICYC
 9000 FORMAT(' CALLING CVBROW, CYCLE=',I2)
      CALL CVBROW (.FALSE.)
C
C     CALL **CVCNOP** TO COMPUTE COVER STATISTICS.
C
      IF (PDEBUG) WRITE (JOPPRT,8005) ICYC
 8005 FORMAT (' CALLING CVCNOP, CYCLE =',I2)
      CALL CVCNOP(.FALSE.)
C
C     CALL **STATS** TO COMPUTE STATISTICAL DESCRIPTION OF
C     INPUT DATA.
C
      IF (PDEBUG) WRITE(JOPPRT,9005) ICYC
 9005 FORMAT(' CALLING STATS, CYCLE=',I2)
      CALL STATS
C
C     STORE INITIAL STAND STATISTICS.  MAKE SURE THAT ICL6 IS POSITIVE
C
      ICL6=1
      IF (PDEBUG) WRITE (JOPPRT,40)
   40 FORMAT (/' CALLING LDSUM & STOPRT FROM INSTND.')
      CALL LDSUM (1)
      CALL STOPRT
C
C     IF TREE LIST OUTPUT IS REQUESTED, CALL TREE LIST PRINTER
C
      CALL MISPRT
      CALL PRTRLS (1)
C
C     CREATE THE INITIAL STAND VISUALIZATION
C
      CALL SVSTART
C
C     LOAD OLD VOLUME VARIABLES WITH CYCLE 0 VOLUMES
C
      CALL FVSSTD (1)
C
C     IF NAT CRUISE OUTPUT IS REQUESTED ... CALL NATCRZ PRINTER.
C
      CALL NATCRZ (1)
C
C     DONE WITH DEAD TREES THAT WERE PRESENT IN THE INVENTORY. PURGE
C     THEM FROM THE LIST (VIA RESET POINTER)
C
      IREC2=MAXTP1
C
C     WESTERN ROOT DISEASE MODEL INITIALIZATION
C
      CALL RDMN1 (2)
      CALL RDPR
C
C     BLISTER RUST MODEL INITIALIZATION
C
      CALL BRSETP
      CALL BRPR
C
      LFLAG=.FALSE.
      LSTART = .FALSE.
C
      RETURN
      END
