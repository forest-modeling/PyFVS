      SUBROUTINE PPEVMI (NOCCRD,IEVLST,MAELNK,MAE)
      IMPLICIT NONE
C----------
C  **PPEVMI  DATE OF LAST REVISION:  07/31/08
C----------
C
C     EVENT MONITOR / PARALLEL PROCESSING INTERFACE.  CREATES BRANCH
C     NODES AND BRANCHES AND SCHEDULES ALTERNATIVE ACTIVITY GROUPS.
C
C     PART OF THE PARALLEL PROCESSING EXTENSION OF PROGNOSIS SYSTEM
C     N.L. CROOKSTON--FORESTRY SCIENCES LAB, MOSCOW, ID--AUG 1982.
C     COMPLETE REWRITE -- NL CROOKSTON -- JAN 1987
C
C     NOCCRD= NUMBER OF ROWS IN IEVLST, NUMBER OF EVENTS THAT OCCURRED
C     IEVLST= A LIST OF EVENTS THAT OCCURRED THIS CYCLE AND PHASE.
C             (1,.)= THE EVENT NUMBER (A ROW IN IEVNTS)
C             (2,.)= FIRST ACTIVITY GROUP (A ROW IN IEVACT)
C             (3,.)= NUMBER OF ACTIVITY GROUPS (ROWS IN IEVACT)
C     MAELNK= LIST OF ACTIVITY GROUPS THAT ARE ASSOCIATED WITH
C             AN EVENT THAT HAS MORE THAN ONE ACTIVITY GROUP
C             ASSOCIATED WITH IT.
C             (1,.)= POINTS TO THE ENTRY IN IEVACT, AGLSET, & LENAGL
C             (2,.)= POINTS TO THE ENTRY IN IEVNTS
C     MAE   = THE NUMBER OF ENTRIES IN MAE.
C
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'PPEPRM.F77'
C
C
      INCLUDE 'OPCOM.F77'
C
C
      INCLUDE 'PPCNTL.F77'
C
C
      INCLUDE 'CONTRL.F77'
C
C
COMMONS
C
      INTEGER MAE,NOCCRD,LRNLS,LWK1,II,I,KODE,M,J,NODE,K,ICS
      CHARACTER CBISN*7,CISN*11
      INTEGER IEVLST(3,25),MAELNK(2,50)
C
C     WRITE SOME DEBUG.
C
      IF (PDEBUG) WRITE (JOPPRT,20) NOCCRD,MAE
   20 FORMAT (/' IN PPEVMI: NOCCRD,MAE= ',2I5)
C
C     IF LABEL PROCESSING IS BEING DONE, CREATE THE REMAINING NODE
C     LABEL SET (RNLS) IN WKSTR1.  LET LNRLS BE THE LENGTH OF THE RNLS.
C
      LRNLS=0
      IF (LBSETS) THEN
         WKSTR3=SLSET
         LWK1=LENSLS
         DO 40 II=1,MAE
         I=MAELNK(1,II)
         CALL LBRNLS (LWK1,WKSTR3,LENAGL(I),AGLSET(I),LRNLS,WKSTR2,
     >                KODE)
         IF (LRNLS.EQ.0) GOTO 50
         WKSTR3=WKSTR2
         LWK1=LRNLS
   40    CONTINUE
C
C        IF THE LOOP EXITS NORMALLY, THE RNLS IS NOT A NULL SET.  AN
C        EXTRA BRANCH IS NEEDED.
C
         MAE=MAE+1
         MAELNK(1,MAE)=0
         MAELNK(2,MAE)=0
   50    CONTINUE
         IF (PDEBUG) THEN
            WRITE (JOPPRT,55) MAE,LRNLS
   55       FORMAT (' IN PPEVMI: MAE= ',I5,'; LRNLS=',I3)
            IF (LRNLS.GT.0) WRITE (JOPPRT,'('' RNLS= '',A)') 
     >                             WKSTR3(1:LRNLS)
         ENDIF
      ENDIF
C
C     MAE IS NOW THE NUMBER OF BRANCHES NEEDED FOR THE NODE.  IF MAE
C     IS GREATER THAN NINE, AN ERROR MESSAGE IS WRITTEN.
C
      IF (MAE.GT.9) THEN
         CALL PPERRP (.TRUE.,4)
         WRITE (JOPPRT,60) ISTND,CISNUM(ISTND),MICYC,
     >         MIY(MICYC),MIY(MICYC+1),MAE,9
   60    FORMAT (/' ISTND=',I4,'; CISNUM= ',A11,'; MASTER CYCLE=',I3,
     >           '; YEARS=',I5,' TO',I5,'; ALTERNATIVE COUNT=',I2:/
     >           ' ONLY',I2,' ALTERNATIVES WILL BE SCHEDULED. ')
         IF (LBSETS) THEN
            WRITE (JOPPRT,70)
   70       FORMAT (/' ACTIVITY GROUP LABEL SETS FOR ALL REQUESTED ',
     >               'ALTERNATIVES ARE:'/' ALTERNATIVE  LABEL')
            M=MAE
            IF (LRNLS.GT.0) M=M-1
            DO 80 I=1,MAE
            J=MAELNK(1,I)
            WRITE (JOPPRT,'(1X,I7,T15,A)') I,AGLSET(J)(1:LENAGL(J))
   80       CONTINUE
            IF (LRNLS.GT.0) WRITE (JOPPRT,'('' NODE='',I3,
     >         ''; RNLS= '',A)') NODE,WKSTR3(1:LRNLS)
         ELSE
            WRITE (JOPPRT,'(/'' LABEL PROCESSING NOT BEING USED.'')')
         ENDIF
C
C        SET MAE EQUAL TO 9.
C
         MAE=9
      ENDIF
C
C     MAE MAY NOW EQUAL EXACTLY 1.  IF SO, NO BRANCHES ARE CREATED,
C     BUT THE ACTIVITIES ARE SCHEDULED FOR THE CURRENT ALTERNATIVE
C
      IF (MAE.EQ.1) THEN
         CALL EVAGRP (0,1,MAE,MAELNK)
         IF (PDEBUG) WRITE (JOPPRT,'('' IN PPEVMI: ONE GROUP'')')
         GOTO 200
      ENDIF
C
C     THERE ARE MORE THAN ONE ALTERNATIVES AND LESS THAN 9.
C
C     CHECK ON THE VALUE OF LASTIN.  IF IT IS FALSE, WE ARE TRYING TO
C     CREATE A BRANCH BEFORE THE FIRST MASTER CYCLE BEGINS.  THIS IS
C     NOT PERMITTED...ISSUE AN ERROR MSG, SET MAE = 1 AND
C     SCHEDULE THE FIRST ACTIVITY GROUP.
C
      IF (.NOT.LASTIN) THEN
         MAE=1
         CALL PPERRP (.TRUE.,15)
         CALL EVAGRP (0,1,MAE,MAELNK)
         GOTO 200
      ENDIF
C
C     IS THERE ROOM IN THE ISN TO STORE THE BRANCHES?  AND ARE THERE
C     ENOUGH ROWS IN ISNKEY?
C
      CISN=CISNUM(ISTND)
      CBISN=CISNUM(ISTND)(5:11)
      CALL RITCOL (CBISN,NODE)
      IF (NODE.GE.7 .OR. NOSTND+MAE-1.GT.MXSTND) THEN
C
C        IF NOT ENOUGH ROOM FOR THE REPLICATES, WRITE MSGS.
C
         WRITE (JOPPRT,60) ISTND,CISNUM(ISTND),MICYC,
     >         MIY(MICYC),MIY(MICYC+1),MAE,1
         WRITE (JOPPRT,'('' NODE COUNT= '',I4,''; NOSTND='',I4,
     >          ''; BRCHWT='',E14.7)') NODE,NOSTND,BRCHWT(ISTND)
         IF (LBSETS) THEN
            WRITE (JOPPRT,70)
            M=MAE
            IF (LRNLS.GT.0) M=M-1
            DO 81 I=1,MAE
            J=MAELNK(1,I)
            WRITE (JOPPRT,'(1X,I7,T15,A)') I,AGLSET(J)(1:LENAGL(J))
   81       CONTINUE
            IF (LRNLS.GT.0) WRITE (JOPPRT,'('' NODE='',I3,
     >         ''; RNLS= '',A)') MAE,WKSTR3(1:LRNLS)
         ELSE
            WRITE (JOPPRT,'(/'' LABEL PROCESSING NOT BEING USED.'')')
         ENDIF
C
C        SET MAE EQUAL TO 1.
C
         MAE=1
         CALL PPERRP (.TRUE.,14)
         CALL EVAGRP (0,1,MAE,MAELNK)
         GOTO 200
      ENDIF
C
C     WE HAVE SPACE TO CREATE BRANCHES.  INCREMENT THE NODE COUNT,
C     MODIFY THE ROOT STAND ISN, AND STORE IN ISNKEY.
C
      NODE=NODE+1
      CALL ADD1 (CISN,NODE)
      IF (PDEBUG) WRITE (JOPPRT,84) NODE,ISTND,CISN,MAE
   84 FORMAT (' IN PPEVMI: NODE=',I4,'; ISTND=',I4,'; CISN= ',A11,
     >        '; MAE=',I4)
      CISNUM(ISTND)=CISN
C
C     STORE THE PROCESSING PHASE FOR THIS STAND.
C
      ISNKEY(ISTND,4)=IPHASE
C
C     CREATE ADDTIONAL ENTRIES IN ISNKEY FOR THE REST OF THE BRANCHES.
C
      DO 100 I=2,MAE
      NOSTND=NOSTND+1
      CALL ADD1(CISN,NODE)
      IF (PDEBUG) WRITE (JOPPRT,86) NODE,I,NOSTND,CISN
   86 FORMAT (' IN PPEVMI: NODE=',I4,'; I=',I4,'; NOSTND=',I4,
     >        '; CISN= ',A11)
      CISNUM(NOSTND)=CISN
      ISNSRT(NOSTND)=NOSTND
      BRCHWT(NOSTND)=BRCHWT(ISTND)
      AREAS (NOSTND)=AREAS (ISTND)
      SAMWTS(NOSTND)=SAMWTS(ISTND)
      STDIDS(NOSTND)=STDIDS(ISTND)
      MGMIDS(NOSTND)=MGMIDS(ISTND)
C
C     SET THE NEW STAND FOR NO INTERSTAND INTERACTION.
C
      IPMODE(NOSTND)=1
C
C     SET ENTRIES IN ISNKEY.
C
      DO 90 K=1,4
      ISNKEY(NOSTND,K)=ISNKEY(ISTND,K)
   90 CONTINUE
  100 CONTINUE
C
C     CREATE COPIES OF THE STAND, LOAD THEM UP WITH THE PROPER
C     ACTIVITIES AND CORRECTLY DEFINE THE STAND LABEL SETS
C
C     STORE THE CURRENT STAND POINTER IN A TEMPORARY VARIABLE.
C
      ICS=ISTND
C
C     INSURE THAT STAND TEMPLATING IS TURNED ON.
C
      LTMPAC=.TRUE.
C
C     CALL MSTRPT TO WRITE THE CURRENT TEMPLATE TO DISK.  THIS
C     TEMPLATE WILL INCLUDE THE OPTIONS THAT HAVE ALREADY BEEN
C     SCHEDULED INSIDE OF EVMON FOR EVENTS THAT HAVE ONLY ONE
C     ASSOCIATED ACTIVITY GROUP.
C
      CALL MSTRPT
C
C     LOOP THRU THE SECOND AND SUBSEQUENT BRANCHES.
C
      DO 110 I=2,MAE
      ISTND=NOSTND-MAE+I
C
C     IF ON THE THIRD OR SUBSEQUENT BRANCH, GET THE MASTER TEMPLATE.
C
      IF (I.GT.2) CALL MSTRGT
C
C     CALL EVAGRP TO SCHEDULE THE ACTIVITY GROUPS FOR EACH
C     ALTERNATIVE.  THE STAND LABEL SET IS SET IN EVAGRP...
C     PROCESSING OF THE "EXTRA BRANCH" REQUIRED WHEN RNLS IS
C     NOT EQUAL TO THE NULL SET IS ALSO DONE IN EVAGRP.
C
      CALL EVAGRP (LRNLS,I,MAE,MAELNK)
C
C     IF MULTISTAND SELECTION IS ACTIVE, CALL HVUPST TO UPDATE THE
C     POLICY STATUS CODES FOR THE STAND.
C
      IF (LHVALL) CALL HVUPST (JOPPRT,ICS,ISTND)
C
C     STORE THE STAND WITH ITS NEWLY DEFINED ACTIVITIES AND LABELS.
C
      LNSETS(ISTND)=LENSLS
      SLSETS(ISTND)(1:LENSLS)=SLSET(1:LENSLS)
      CALL PUTSTD
  110 CONTINUE
C
C     RESET ISTND.
C
      ISTND=ICS
C
C     GET THE TEMPLATE AGAIN, AND SCHEDULE THE OPTIONS FOR THE FIRST
C     NODE.  A PUT STAND IS NOT NECESSARY, BECAUSE THE DATA FOR THIS
C     NODE REPRESENT THE NODE THAT WILL BE PROCESSED UPON RETURN.
C
      CALL MSTRGT
      CALL EVAGRP (0,1,MAE,MAELNK)
C
C     IF MULTISTAND SELECTION IS ACTIVE, CALL HVUPST TO UPDATE THE
C     POLICY STATUS CODES FOR THE STAND.
C
      IF (LHVALL) CALL HVUPST (JOPPRT,ISTND,ISTND)
C
C     STORE STAND LABELS.
C
      LNSETS(ISTND)=LENSLS
      SLSETS(ISTND)(1:LENSLS)=SLSET(1:LENSLS)
C
C     REORDER THE PROCESSING ORDER SORT SO THAT THE NEW ALTERNATIVES
C     WILL BE PROCESSED NEXT.
C
      CALL C11SRT (NOSTND,CISNUM,ISNSRT,.FALSE.)
C
  200 CONTINUE
      RETURN
      END
