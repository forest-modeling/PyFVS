      SUBROUTINE LLADD (IVAL,IBEG,IEND)
      IMPLICIT NONE
C----------
C  **LLADD   DATE OF LAST REVISION:  07/31/08
C----------
C
C     ADD AN ELEMENT TO AN INTEGER LINKED LIST.
C
C     PART OF THE PARALLEL PROCESSING EXTENSION TO PROGNOSIS.
C     P.W. THOMAS--FORESTRY SCIENCES LAB, MOSCOW, ID--MARCH 1986
C     COMMENTS BY NL CROOKSTON.
C
C     IVAL  = INTEGER VALUE TO BE STORED.
C     IBEG  = POINTER TO BEGINNING OF LINKED LIST.  IF PASSED IN
C             AS NULL, A NEW LINKED LIST IS ESTABLISHED.  IN THIS
C             CASE, IBEG IS RETURNED AS THE POINTER TO A NEW LIST.
C             IF IBEG IS NE NULL, AN OLD LIST IS BEING ADDED TO.
C     IEND  = POINTER TO END OF LINKED LIST.
C
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'PPEPRM.F77'
C
C
      INCLUDE 'PPLLCM.F77'
C
C
COMMONS
C
C
      INTEGER IEND,IBEG,IVAL,IQ
C
C
C     GET A LINKED LIST ELEMENT (A POINTER TO AN EMPTY CELL).
C
      CALL LLNEW (IQ)
C
C     STORE THE INTEGER VALUE IN THE LIST.
C
      IELEM(IQ)=IVAL
C
C     IF IBEG IS EQUAL TO INULL, THEN SET THE BEGINNING AND END OF
C     THE LIST EQUAL TO THE ELEMENT.
C
      IF (IBEG.EQ.INULL) THEN
         IBEG=IQ
         IEND=IQ
C
C     OTHERWISE, IEND IS PASSED IN AS THE END OF THE LIST.  RESET
C     THE LINK TO THE OLD END OF THE LIST TO POINT TO THE NEW END
C     OF THE LIST AND RETURN IEND AS THE NEW END OF THE LIST.
C
      ELSE
         LKNEX(IEND)=IQ
         IEND=IQ
      ENDIF
      RETURN
      END
