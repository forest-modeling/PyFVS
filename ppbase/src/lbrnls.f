      SUBROUTINE LBRNLS (LENSLS,SLS,LENNLS,NLS,LNRNLS,RNLS,KODE)
      IMPLICIT NONE
C----------
C  **LBRNLS DATE OF LAST REVISION:  07/31/08
C----------
C
C     CREATE THE REMAINING NODE LABEL SET. (RNLS)  THE RNLS IS THE
C     SET OF MEMBERS THAT ARE IN SLS BUT NOT IN NLS.
C
C     PART OF THE LABEL PROCESSING COMPONENT OF THE PROGNOSIS SYSTEM
C     N.L. CROOKSTON -- INTERMOUNTAIN RESEARCH STATION -- JAN 1987
C
C     LENSLS= LENGTH OF THE DEFINED PART OF THE STAND LABEL SET
C     SLS   = C*100 STRING CONTAINING THE STAND LABEL SET
C     LENNLS= LENGTH OF NODE LABEL SET
C     NLS   = C*100 STRING CONTAINING THE NODE LABEL SET
C     LNRNLS= THE LENGTH OF THE REMAINING NODE LABEL SET
C     RNLS  = C*100 SET CONTAINING THE REMAINING NODE LABEL SET
C     KODE  = RETURN CODES: 0= OK, 1=RNLS IS OVER 100 CHARS
C             (THE ROUTINE CREATES AS MUCH OF A RNLS IS POSSIBLE
C             WITHOUT CREATING A PARTIAL LABEL, THIS SHOULD NEVER
C             HAPPEN, HOWEVER.)
C
      CHARACTER*100 SLS,NLS,RNLS,WRKS1,WRKS2
      LOGICAL LBMEMR
      INTEGER KODE,LNRNLS,LENNLS,IP,LENWRK,LENSLS
C
C     INITIALIZE THE RETURN CODE TO ZERO AND THE RNLS TO ZERO LENGTH.
C
      KODE=0
      LNRNLS=0
      RNLS=' '
C
C     IF THE SLS HAS ZERO LENGTH, THE RNLS IS EMPTY.
C
      IF (LENSLS.EQ.0) GOTO 20
C
C     IF THE NLS HAS ZERO LENGTH, THE RNLS IS THE SLS
C
      IF (LENNLS.EQ.0) THEN
         IF (LENSLS.GT.0) THEN
            LNRNLS=LENSLS
            RNLS=SLS
         ENDIF
         GOTO 20
      ENDIF
C
C     BOTH SETS HAVE GREATER THAN ZERO LENGTH...PROCEED WITH
C     CREATING THE RNLS.
C
C     LOOP THRU ALL OF THE MEMBERS OF SLS.
C
      IP=1
   10 CONTINUE
C
C     IF IP IS GREATER THAN THE LENGTH OF THE STAND LAB SET,
C     END THE LOOP
C
      IF (IP.GT.LENSLS) GOTO 20
C
C     LET WRKS1 BE THE FIRST MEMBER OF NLS BETWEEN LOCATION IP
C     AND THE END OF THE STRING HOLDING NLS.
C
      CALL LB1MEM (IP,LENSLS,SLS,LENWRK,WRKS1)
C
C     FIND OUT IF WRKS1 IS IN THE NLS.  IF IT IS NOT, THEN ADD IT
C     ONTO THE END OF RNLS (IF THERE IS ROOM).
C
      IF (.NOT.LBMEMR(LENWRK,WRKS1,LENNLS,NLS)) THEN
         IF (LNRNLS.LE.0) THEN
            LNRNLS = LENWRK
            RNLS = WRKS1
         ELSE
            IF (LNRNLS+LENWRK+2.LE.100) THEN
               WRKS2 = RNLS(1:LNRNLS) // ', ' // WRKS1(1:LENWRK)
               LNRNLS = LNRNLS+LENWRK+2
               RNLS = WRKS2
            ELSE
               KODE = 1
            ENDIF
         ENDIF
      ENDIF
C
C     SET THE IP TO THE LAST CHARACTER OF THE CURRENT MEMBER PLUS 2
C     (ONE FOR THE COMMA AND ANOTHER FOR THE BLANK THAT PRECEDES EACH
C     OF THE MEMBERS PAST THE FIRST ONE).
C
      IP=IP+LENWRK+2
C
C     BRANCH BACK TO PROCESS THE NEXT MEMBER LABEL.
C
      GOTO 10
   20 CONTINUE
      RETURN
      END
