        SUBROUTINE FVSVOL
        IMPLICIT NONE
C----------
C VOLUME $Id
C----------
C
C  THIS SUBROUTINE CALLS THE APPROPRIATE VOLUME CALCULATION ROUTINE
C  FROM THE NATIONAL CRUISE SYSTEM VOLUME LIBRARY FOR METHB OR METHC
C  EQUAL TO 6.  IT ALSO CONTAINS ANY OTHER SPECIAL VOLUME CALCULATION
C  METHOD SPECIFIC TO A VARIANT (METHB OR METHC = 8)
C----------
C
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'ARRAYS.F77'
C
C
      INCLUDE 'COEFFS.F77'
C
C
      INCLUDE 'CONTRL.F77'
C
C
      INCLUDE 'PLOT.F77'
C
C
      INCLUDE 'VOLSTD.F77'
C
C
COMMONS
C
C----------
      INTEGER IT,ITRNC,ISPC,INTFOR,IERR,IZERO
      INTEGER I1,IREGN,IFC,IFIASP,LOGST
      REAL VMAX,BARK,H,D,BBFV,VM,VN
      REAL FC,DBTBH,TVOL1,TVOL4,TDIBB,TDIBC,BRATIO
      REAL NOLOGP,NOLOGS
      CHARACTER*10 VOLEQ
      CHARACTER CTYPE*1,FORST*2,HTTYPE*1,PROD*2,FIASP*4
      REAL SCALEN(20),BOLHT(21),LOGLEN(20),TVOL(15)
      INTEGER ERRFLAG,TLOGS
      LOGICAL TKILL,CTKFLG,BTKFLG,LCONE,DEBUG
      CHARACTER*10 EQNC,EQNB
      INTEGER I3,I7,I15,I20,I21 
      INTEGER CUTFLG,BFPFLG,CUPFLG,CDPFLG,SPFLG
      REAL HT1PRD,X1,MTOPP,MTOPS
      CHARACTER CONSPEC*4,VVER*7
      REAL S3,BV,BEHRE
      REAL ALVN,VOLT,VOLM,STUMP,DMRCH,HTMRCH
      INTEGER ITD
      REAL BBF,VVN
C----------
C  NATIONAL CRUISE SYSTEM ROUTINES (METHOD = 6)
C----------
      ENTRY NATCRS (VN,VM,BBFV,ISPC,D,H,TKILL,BARK,ITRNC,VMAX,
     1              CTKFLG,BTKFLG,IT)
C-----------
C  SEE IF WE NEED TO DO SOME DEBUG.
C-----------
      CALL DBCHK (DEBUG,'FVSVOL',6,ICYC)
      IF(DEBUG) WRITE(JOSTND,3)ICYC,IFOR
    3 FORMAT(' ENTERING SUBROUTINE FVSVOL CYCLE,IFOR =',I5,i4)
      IF(DEBUG)WRITE(JOSTND,*)' AFTER NATCRS ARGUMENTS= ',VN,VM,BBFV,
     &ISPC,D,H,TKILL,BARK,ITRNC,VMAX,CTKFLG,BTKFLG,IT
C
      IREGN = KODFOR/100
      INTFOR = KODFOR - (KODFOR/100)*100
      WRITE(FORST,'(I2)')INTFOR
      IF(INTFOR.LT.10)FORST(1:1)='0'
C----------
C  SET PARAMETERS & CALL VOLINIT TO COMPUTE VOLUMES.
C---------
      WRITE(FIASP,('(A)'))JSP(ISPC)
      HTTYPE='F'
      IERR=0
      DBTBH = D*(1-BARK)
      DO 100 IZERO=1,15
      TVOL(IZERO)=0.
  100 CONTINUE
      MTOPS=TOPD(ISPC)*BARK
      MTOPP=BFTOPD(ISPC)*BARK
C----------
C  CALL TO VOLUME INTERFACE - VOLINIT - CUBIC VOLUMES
C  INITIALIZE CONSTANT ARGUMENTS
C----------
      I1=0
      I3=3
      I7=7
      I15=15
      I20=20
      I21=21
      X1=0.
C----------
C  CONSTANT CHARACTER ARGUMENTS
C----------
      CTYPE='F'
      PROD='01'
C----------
C  PRODUCT FLAGS
C----------
C  TOAL CUBIC
      CUTFLG=1
C  BF
      BFPFLG=1
C  MERCH CUBIC
      CUPFLG=1
C  CORDWOOD
      CDPFLG=1
C  SECONDARY PRODUCT
      SPFLG=1
C----------
C  GET FORM CLASS FOR THIS TREE.
C----------
      CALL FORMCL(ISPC,IFOR,D,FC)
      IFC=IFIX(FC)
      IF(DEBUG)WRITE(JOSTND,*)' ISPC,INTFOR,D,FC,IFC= ',
     &ISPC,INTFOR,D,FC,IFC
      TLOGS = 0.
      NOLOGP = 0.
      NOLOGS = 0.
      HT1PRD=0.
      MTOPP=TOPD(ISPC)*BARK
C
      IF(DEBUG)WRITE(JOSTND,*)' CALLING VOLILNIT CF ISPC,ARGS = ',
     &  ISPC,IREGN,FORST,VEQNNC(ISPC),MTOPP,MTOPS,STMP(ISPC),D,H,
     &  IFC,DBTBH,BARK
C
       IF(DEBUG)WRITE(JOSTND,*)IREGN,FORST,VEQNNB(ISPC),MTOPP,MTOPS,
     &  BFSTMP(ISPC),D,X1,HTTYPE,H,I1,HT1PRD,X1,X1,X1,X1,X1,I1,X1,X1,
     &  IFC,DBTBH,BARK*100.,I3,I7,I15,I20,I21,
     &  TLOGS,NOLOGP,NOLOGS,CUTFLG,BFPFLG,CUPFLG,CDPFLG,
     &  SPFLG,' ',PROD,0,' ',
     &  0,0,CTYPE,IERR
C 
      CALL VOLINIT(IREGN,FORST,VEQNNC(ISPC),MTOPP,MTOPS,STMP(ISPC),
     & D,X1,HTTYPE,H,I1,HT1PRD,X1,X1,X1,X1,X1,I1,X1,X1,IFC,DBTBH,
     & BARK*100.,I3,I7,I15,I20,I21,TVOL,LOGVOL,LOGDIA,LOGLEN,
     & BOLHT,TLOGS,NOLOGP,NOLOGS,CUTFLG,BFPFLG,CUPFLG,CDPFLG,
     & SPFLG,CONSPEC,PROD,0,' ',
     & 0,0,CTYPE,IERR)
C
      IF(DEBUG)WRITE(JOSTND,*)'AFTER VOLINIT CF IERR,TVOL= ',IERR,TVOL
C----------
C  MERCH HEIGHTS
C----------
      IF(D.GE.DBHMIN(ISPC))THEN
        IF(IT.GT.0)HT2TD(IT,2)=HT1PRD
      ELSE
        IF(IT.GT.0)HT2TD(IT,2)=0.
      ENDIF        
      IF(D.GE.BFMIND(ISPC))THEN
        IF(IT.GT.0)HT2TD(IT,1)=HT1PRD
      ELSE
        IF(IT.GT.0)HT2TD(IT,1)=0.
      ENDIF
C----------
C  IF TOP DIAMETER IS DIFFERENT FOR BF CALCULATIONS,  OR THE BF VOLUME EQ.
C  IS DIFFERENT THAN THE CF VOLUME EQUATION NO. THEN STORE APPROPRIATE
C  VOLUMES AND CALL PROFILE AGAIN.
C----------
      IF((BFTOPD(ISPC).NE.TOPD(ISPC)).OR.
     &   (BFSTMP(ISPC).NE.STMP(ISPC)).OR.
     &   (VEQNNB(ISPC).NE.VEQNNC(ISPC)))THEN
        TVOL1=TVOL(1)
        TVOL4=TVOL(4)
        DO IZERO=1,15
        TVOL(IZERO)=0.
        ENDDO
C----------
C  CALL TO VOLUME INTERFACE - VOLINIT - BF VOLUMES
C  INITIALIZE CONSTANT ARGUMENTS
C----------
        I1=0
        I3=3
        I7=7
        I15=15
        I20=20
        I21=21
        X1=0.
C----------
C  CONSTANT CHARACTER ARGUMENTS
C----------
        CTYPE='F'
        PROD='01'
C----------
C  PRODUCT FLAGS
C----------
C  TOAL CUBIC
        CUTFLG=0
C  BF
        BFPFLG=1
C  MERCH CUBIC
        CUPFLG=0
C  CORDWOOD
        CDPFLG=1
C  SECONDARY PRODUCT
        SPFLG=1
C----------
C  GET FORM CLASS FOR THIS TREE.
C----------
        CALL FORMCL(ISPC,INTFOR,D,FC)
        IFC=IFIX(FC)
        TLOGS = 0.
        NOLOGP = 0.
        NOLOGS = 0.
        HT1PRD=0.
        MTOPP=BFTOPD(ISPC)*BARK
C
        IF(DEBUG)WRITE(JOSTND,*)' CALLING VOLILNIT BF ISPC,ARGS = ',
     &  ISPC,IREGN,FORST,VEQNNB(ISPC),MTOPP,MTOPS,BFSTMP(ISPC),D,H,
     &  IFC,DBTBH,BARK
C
        CALL VOLINIT(IREGN,FORST,VEQNNB(ISPC),MTOPP,MTOPS,BFSTMP(ISPC),
     &  D,X1,HTTYPE,H,I1,HT1PRD,X1,X1,X1,X1,X1,I1,X1,X1,IFC,DBTBH,
     &  BARK*100.,I3,I7,I15,I20,I21,TVOL,LOGVOL,LOGDIA,LOGLEN,
     &  BOLHT,TLOGS,NOLOGP,NOLOGS,CUTFLG,BFPFLG,CUPFLG,CDPFLG,
     &  SPFLG,' ',PROD,0,' ',
     &  0,0,CTYPE,IERR)
C     
        IF(DEBUG)WRITE(JOSTND,*)' AFTER VOLINIT BF TVOL= ',TVOL
C
        IF(D.GE.BFMIND(ISPC))THEN
          IF(IT.GT.0)HT2TD(IT,1)=HT1PRD
        ELSE
          IF(IT.GT.0)HT2TD(IT,1)=0.
        ENDIF
C
C  WHEN THERE IS NO CF VOL. EQ. NO. (E.G. CF METHC=2 OR 3, AND CFVOL
C  OR OCFVOL IS CALLED FROM VOLS, MUST SET VMAX SO TRUNKATED VOLUMES
C  ARE CALCULATED
C
        TVOL(1)=TVOL1
        TVOL(4)=TVOL4
      ENDIF                   ! END OF BF SECTION
C----------
C  SET RETURN VALUES.
C----------
      VN=TVOL(1)
      IF(VN.LT.0.)VN=0.
      VMAX=VN
      IF(D .LT. DBHMIN(ISPC))THEN
        VM = 0.
      ELSE
        VM=TVOL(4)
        IF(VM.LT.0.)VM=0.
      ENDIF
      IF(D.LT.BFMIND(ISPC))THEN
        BBFV=0.
      ELSE
        IF(METHB(ISPC).EQ.9) THEN
          BBFV=TVOL(10)
        ELSE
          BBFV=TVOL(2)
        ENDIF
        IF(BBFV.LT.0.)BBFV=0.
      ENDIF
      CTKFLG = .TRUE.
      BTKFLG = .TRUE.
      RETURN
C
C
C----------
C  ENTER ANY OTHER CUBIC HERE
C----------
      ENTRY OCFVOL (VN,VM,ISPC,D,H,TKILL,BARK,ITRNC,VMAX,LCONE,
     1              CTKFLG,IT)
      VVN=0.0
      BBF=0.0
      CALL VARVER(VVER)
      IF(VVER(:2).EQ.'AK')THEN
        CALL FVSBRUCEDEMARS(VN,VM,VMAX,D,H,ISPC,BARK,LCONE,CTKFLG)
      ELSEIF((VVER(:2).EQ.'SM').OR.(VVER(:2).EQ.'SP').OR.
     &       (VVER(:2).EQ.'BP').OR.(VVER(:2).EQ.'SF').OR.
     &       (VVER(:2).EQ.'LP'))THEN
        CALL FVSHANNBARE(VN,VM,VMAX,ISPC,D,H,CTKFLG)
      ELSEIF(VVER(:2).EQ.'NC')THEN
        CALL FVSSIERRALOG(VN,VM,VMAX,ISPC,D,H,BARK,LCONE,CTKFLG)
      ELSE
        VN=0.
        VMAX=0.
        VM=0.
        CTKFLG = .FALSE.
      ENDIF
      IF(VN .LE. 0.) THEN
        VM=0.
        CTKFLG=.FALSE.
      ENDIF
      RETURN
C
C
C----------
C  ENTER ANY OTHER BOARD HERE.
C----------
      ENTRY OBFVOL (BBFV,ISPC,D,H,TKILL,BARK,ITRNC,VMAX,LCONE,
     1              BTKFLG,IT)
      CALL VARVER(VVER)
      IF(VVER(:2).EQ.'AK')THEN      
        VVN=0.0
        BBF=0.0
        IF(D .GE. 9.0 .AND. H .GT. 40.0)
     &  CALL FVSOLDGRO(ISPC,VVN,D,H,BBF)
        BBFV=BBF
        BTKFLG = .TRUE.
      ELSEIF((VVER(:2).EQ.'SM').OR.(VVER(:2).EQ.'SP').OR.
     &       (VVER(:2).EQ.'BP').OR.(VVER(:2).EQ.'SF').OR.
     &       (VVER(:2).EQ.'LP'))THEN
        CALL HANNBAREBF(BBFV,ISPC,D,H,VMAX,BTKFLG)
        BTKFLG = .TRUE.
      ELSEIF(VVER(:2).EQ.'NC')THEN
        ITD=BFTOPD(ISPC)+0.5
        IF(ITD.GT.100) ITD = 100
        CALL LOGS(D,H,ITD,ITD,DBHMIN(ISPC),BFMIND(ISPC),ISPC,
     &            BFSTMP(ISPC),BV,JOSTND)
        BBFV=BV
        BTKFLG=.TRUE.
      ELSE
        BBFV=0.
        BTKFLG = .FALSE.
      ENDIF
      IF(BBFV .LE. 0.) THEN
        BBFV=0.
        BTKFLG=.FALSE.
      ENDIF    
      RETURN
C
C
C----------
C  ENTRY POINT FOR SENDING VOLUME EQN NUMBER TO THE FVS-TO-NATCRZ ROUTINE
C----------
      ENTRY GETEQN(ISPC,D,H,EQNC,EQNB,TDIBC,TDIBB)
      EQNC=VEQNNC(ISPC)
      EQNB=VEQNNB(ISPC)
      TDIBC=TOPD(ISPC)*BRATIO(ISPC,D,H)
      TDIBB=BFTOPD(ISPC)*BRATIO(ISPC,D,H)
      RETURN
C
      END
