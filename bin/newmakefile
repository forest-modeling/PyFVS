
# note: that assumption is that if OS is defined, then then we are 32 bit windows
# other wise, we are Linix and 64 bit. Those are the only two systems
# supported right now.

ifdef OS
 ODBC = odbc32
 ifeq (${as.shared},1)
  SHARED = -shared 
  OUTSUFX = .so
  MAIN = 0
  PIC = 
 else
  SHARED = -static
  OUTSUFX = .exe
  MAIN = 1
  PIC = 
 endif
#not 32 bit windows, assume 64 bit Linux.
else
 ODBC = odbc 
 ifeq (${as.shared},1)
  SHARED = -shared 
  OUTSUFX = .so
  MAIN = 0
  PIC = -fPIC
 else
  SHARED =
  OUTSUFX =
  MAIN = 1
  PIC = 
 endif
endif

export FC = gfortran
export FFLAGS = $(PIC) -DANSI -DCMP${CC}
export CC = gcc
export CFLAGS = $(PIC) -DANSI -DCMP${CC}

# these variables are not processed until sourceFileList is defined...and that happens
# when the first rule fires (the %.setup rule).
ifdef sourceFileList
 ifndef sourceList
  export sourceFileList
  export sourceList = $(shell cat $(sourceFileList))
  export includes = $(notdir $(filter %.F77 %.INC %.FOR %.inc %.h,$(sourceList))) 
  export src1 = $(notdir $(filter %.c %.f,$(sourceList))) 
  ifeq (${MAIN},0) 
   export source = $(filter-out main.f,$(src1))
  else
   export source = $(src1)
  endif
  export object = $(addsuffix .o,$(basename $(source)))
 endif
endif

clean :
	rm -frv *_buildDir ../dbs/obj/fvsSQL.o libfvsSQL.so

ifndef sourceFileList

FVSiec : FVSiec_sourceList.txt $(shell cat FVSiec_sourceList.txt)
	$(MAKE) --file=newmakefile $@.setup
	
FVSpnc : FVSiec_sourceList.txt $(shell cat FVSiec_sourceList.txt)
	$(MAKE) --file=newmakefile $@.setup
	
# here is the rule that sets up the directories and copies the source, then it calls make
# again to build the target.
%.setup : libfvsSQL.so 
	mkdir -pv $(basename $@)_buildDir
	cp -p `cat $(basename $@)_sourceList.txt` $(basename $@)_buildDir
	$(MAKE) --file=../newmakefile --directory=$(basename $@)_buildDir \
	               buildDir=$(basename $@)_buildDir \
                 sourceFileList=../$(basename $@)_sourceList.txt $(basename $@).prg

libfvsSQL.so : ../dbs/src/fvsSQL.c 
	$(CC) $< -shared ${PIC} -l $(ODBC) -o $@ 

endif

.PRECIOUS : $(object) 

%.prg : $(object)
	@echo object = $(object)
	$(FC) $(SHARED) -o $(basename ../$@)${OUTSUFX} ../libfvsSQL.so $(object)

%.o : %.f $(includes)
	$(FC) $(FFLAGS) -c -o $@ $<

%.o : %.c $(includes)
	$(CC) $(CFLAGS) -c -o $@ $<

