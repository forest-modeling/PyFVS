FC     = gfortran

ifdef sourceFileList
 ifndef sourceList
  export sourceList = $(shell cat $(sourceFileList))
  export includes = $(notdir $(filter %.F77 %.inc %.FOR %.INC,$(sourceList))) 
  export source = $(notdir $(filter %f,$(sourceList))) 
  export object = $(patsubst %.f,%.o,$(source))
 endif
endif

clean :
	rm --force --recursive --verbose *_buildDir

FVSiec : libfofem.so libfvsSQL.so FVSiec_sourceList.txt
	$(MAKE) --file=newmakefile buildDir=$@_buildDir sourceFileList=$@_sourceList.txt $@.prg
 
%.prg : $(sourceList) $(sourceFileList)
	mkdir --parents --verbose $(buildDir)
	$(MAKE) --directory=$(buildDir) --file=../newmakefile $(includes)
	$(MAKE) --no-builtin-rules --directory=$(buildDir) --file=../newmakefile $(object)
	$(FC) -static -o $@ libfvsSQL.so libfofem.so $(addprefix $(buildDir)/,$(object))

%.o : %.f
	$(FC) $(FFLAGS) -c -o $@ $<

%.f :
	@echo need $@
	cp --preserve --verbose ../$(shell grep \/$@ ../$(sourceFileList)) .
               
%.F77 %.inc %.FOR %.INC :
	cp --preserve --verbose ../$(shell grep \/$@ ../$(sourceFileList)) .
	rm --force *.o

libfofem.so : 
	${MAKE} --directory=../fire/fofem/obj --file=makefile fofem
	$(CC) $(shell ls ../fire/fofem/obj/*.o) -shared -o $@ 

libfvsSQL.so : ../dbs/src/fvsSQL.c 
	$(CC) $< -shared ${PIC} -l odbc32 -o $@ 

