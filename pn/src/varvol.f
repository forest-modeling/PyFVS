        SUBROUTINE VARVOL
        IMPLICIT NONE
C----------
C  **VARVOL--PN    DATE OF LAST REVISION:   08/05/11
C----------
C
C  THIS SUBROUTINE CALLS THE APPROPRIATE VOLUME CALCULATION ROUTINE
C  FROM THE NATIONAL CRUISE SYSTEM VOLUME LIBRARY FOR METHB OR METHC
C  EQUAL TO 6.  IT ALSO CONTAINS ANY OTHER SPECIAL VOLUME CALCULATION
C  METHOD SPECIFIC TO A VARIANT (METHB OR METHC = 8)
C----------
C
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'ARRAYS.F77'
C
C
      INCLUDE 'CONTRL.F77'
C
C
      INCLUDE 'PLOT.F77'
C
C
      INCLUDE 'VOLSTD.F77'
C
C
COMMONS
C
C----------
      INTEGER IT,ITRNC,ISPC,INTFOR,IERR,IZERO,I01,I02,I03,I04,I05
      REAL VMAX,BARK,H,D,BBFV,VM,VN,DBT,TOPDIB,X01,X02,X03,X04,X05
      REAL X06,X07,X08,X09,X010,X011,X012
      INTEGER I1,IREGN,IFC,IFIASP,IR,LOGST
      REAL FC,DBTBH,X0,TVOL1,TVOL4,TDIBB,TDIBC,ERRFLAG,BRATIO
      REAL NLOGS,NLOGMS,NLOGTW
      REAL SCALEN(20),LOGLEN(20),BOLHT(21),TVOL(15)
      LOGICAL DEBUG,TKILL,CTKFLG,BTKFLG,LCONE
      CHARACTER CTYPE*1,FORST*2,HTTYPE
      CHARACTER APC*4,PROD*2
      CHARACTER*10 EQNC,EQNB
C----------
C SPECIES ORDER:
C  1=SF   2=WF   3=GF   4=AF   5=RF   6=SS   7=NF   8=YC   9=IC  10=ES
C 11=LP  12=JP  13=SP  14=WP  15=PP  16=DF  17=RW  18=RC  19=WH  20=MH
C 21=BM  22=RA  23=WA  24=PB  25=GC  26=AS  27=CW  28=WO  29=J   30=LL
C 31=WB  32=KP  33=PY  34=DG  35=HT  36=CH  37=WI  38=__  39=OT
C----------
C  VOLUME EQUATIONS AS OF 80/07
C      DATA OLYEQN/MAXSP*'632BEHW000'/
C      DATA SIUEQN/MAXSP*'632BEHW000'/
C
C      DATA BLMEQN/
C     &'B00BEHW011','B00BEHW015','B00BEHW017','B00BEHW015','B00BEHW021',
C     &'B00BEHW098','B00BEHW022','B00BEHW042','B00BEHW081','B00BEHW093',
C     &'B00BEHW108','B00BEHW116','B00BEHW117','B00BEHW119','B00BEHW122',
C     &'B01BEHW202','B00BEHW211','B00BEHW242','B00BEHW260','B00BEHW260',
C     &'B00BEHW312','B00BEHW351','B00BEHW361','B00BEHW999','B00BEHW431',
C     &'B00BEHW999','B00BEHW747','B00BEHW800','B00BEHW242','B00BEHW073',
C     &'B00BEHW119','B00BEHW108','B00BEHW231','B00BEHW999','B00BEHW999',
C     &'B00BEHW999','B00BEHW999','B00BEHW999','B00BEHW999'/
C----------
C  NATIONAL CRUISE SYSTEM ROUTINES (METHOD = 0)
C----------
      ENTRY NATCRS (VN,VM,BBFV,ISPC,D,H,TKILL,BARK,ITRNC,VMAX,
     1              CTKFLG,BTKFLG,IT)
C-----------
C  SEE IF WE NEED TO DO SOME DEBUG.
C-----------
      CALL DBCHK (DEBUG,'VARVOL',6,ICYC)
      IF(DEBUG) WRITE(JOSTND,3)ICYC,ifor
    3 FORMAT(' ENTERING SUBROUTINE VARVOL CYCLE,ifor =',I5,i4)
C----------
C  SET PARAMETERS
C----------
      INTFOR = KODFOR - (KODFOR/100)*100
      WRITE(FORST,'(I2)')INTFOR
      IF(INTFOR.LT.10)FORST(1:1)='0'
      HTTYPE='F'
      IERR=0
      DBT = D*(1-BARK)
      APC = VEQNNC(ISPC)(2:5)
      DO 103 IZERO=1,15
      TVOL(IZERO)=0.
  103 CONTINUE
      TOPDIB=TOPD(ISPC)*BARK
C----------
C  CALL TO VOLUME INTERFACE - PROFILE
C  CONSTANT INTEGER ZERO ARGUMENTS
C----------
      I01=0
      I02=0
      I03=0
      I04=0
      I05=0
C----------
C  CONSTANT REAL ZERO ARGUMENTS
C----------
      X01=0.
      X02=0.
      X03=0.
      X04=0.
      X05=0.
      X06=0.
      X07=0.
      X08=0.
      X09=0.
      X010=0.
      X011=0.
      X012=0.
C----------
C  CONSTANT CHARACTER ARGUMENTS
C----------
      CTYPE=' '
      PROD='  '
C----------
C  CONSTANT INTEGER ARGUMENTS
C----------
      I1= 1
      IREGN= 6
C
      IF(VEQNNC(ISPC)(4:4).EQ.'F')THEN
C
        IF(DEBUG)WRITE(JOSTND,*)' CALLING PROFILE CF ISPC,ARGS = ',
     &    ISPC,IREGN,FORST,VEQNNC(ISPC),TOPD(ISPC),STMP(ISPC),D,H,
     &    DBT,BARK
C
        CALL PROFILE (IREGN,FORST,VEQNNC(ISPC),TOPDIB,X01,STMP(ISPC),D,
     &  HTTYPE,H,I01,X02,X03,X04,X05,X06,X07,X08,X09,I02,DBT,BARK*100.,
     &  LOGDIA,BOLHT,LOGLEN,LOGVOL,TVOL,I03,X010,X011,I1,I1,I1,I04,
     &  I05,X012,CTYPE,I01,PROD,IERR)
C
        IF(D.GE.BFMIND(ISPC))THEN
          IF(IT.GT.0)HT2TD(IT,1)=X02
        ELSE
          IF(IT.GT.0)HT2TD(IT,1)=0.
        ENDIF
        IF(D.GE.DBHMIN(ISPC))THEN
          IF(IT.GT.0)HT2TD(IT,2)=X02
        ELSE
          IF(IT.GT.0)HT2TD(IT,2)=0.
        ENDIF        
C
        IF(DEBUG)WRITE(JOSTND,*)' AFTER PROFILE CF TVOL= ',TVOL

      ELSE
C----------
C  OLD R6 FORM CLASS SECTION
C
C  GET FORM CLASS FOR THIS TREE.
C----------
        CALL FORMCL(ISPC,IFOR,D,FC)
        IFC=IFIX(FC)
C----------
C  SET R6VOL PARAMETERS FOR CUBIC VOLUME
C----------
        NLOGS = 0.
        NLOGMS = 0.
        NLOGTW = 0.
        DBTBH = D-D*BARK
        IERR=0
        X0=0.
C----------
C  CALL R6VOL/BLMVOL TO COMPUTE CUBIC VOLUME.
C----------
        IF(IFOR .LE. 2) THEN
          IF(DEBUG)WRITE(JOSTND,*)' CALLING CF R6VOL ARGS= ',
     &    VEQNNC(ISPC),D,BARK*100.,IFC,TOPDIB,H,DBTBH
          CALL R6VOL(VEQNNC(ISPC),FORST,D,BARK*100.,IFC,TOPDIB,H,'F',
     &             TVOL,LOGVOL,NLOGS,LOGDIA,SCALEN,DBTBH,X0,CTYPE,IERR)
          IF(DEBUG)WRITE(JOSTND,*)' AFTER CF R6VOL TVOL= ',TVOL
        ELSE
          IF(DEBUG)WRITE(16,*)' before BLMVOL-TOPD(ISPC),BARK= ',
     &                          TOPD(ISPC),BARK

          CALL BLMVOL(VEQNNC(ISPC),TOPD(ISPC),H,X0,D,'F',IFC,TVOL,
     &           LOGDIA,LOGLEN,LOGVOL,LOGST,NLOGMS,NLOGTW,APC,1,1,IERR)
C
          IF(DEBUG)WRITE(16,*)' AFTER BLMVOL-VEQNNC(ISPC),TOPD(ISPC),
     &    H,X0,D,','F,IFC,TVOL,LOGDIA, LOGLEN,LOGVOL,LOGST,NLOGMS,
     &    NLOGTW,APC= ',VEQNNB(ISPC),TOPD(ISPC),H,X0,D,'F',IFC,TVOL,
     &               LOGDIA,LOGLEN,LOGVOL,LOGST,NLOGMS,NLOGTW,APC

        ENDIF
      ENDIF      ! END CF SECTION
C----------
C  IF TOP DIAMETER IS DIFFERENT FOR BF CALCULATIONS, STORE APPROPRIATE
C  VOLUMES AND CALL PROFILE AGAIN.
C----------
      IF((BFTOPD(ISPC).NE.TOPD(ISPC) .OR.
     &   BFSTMP(ISPC).NE.STMP(ISPC)).OR.
     &  (VEQNNB(ISPC).NE.VEQNNC(ISPC)))THEN
        TVOL1=TVOL(1)
        TVOL4=TVOL(4)
        DO 101 IZERO=1,15
        TVOL(IZERO)=0.
  101   CONTINUE
        TOPDIB=BFTOPD(ISPC)*BARK
C----------
C  CALL TO VOLUME INTERFACE - PROFILE
C  CONSTANT INTEGER ZERO ARGUMENTS
C----------
        I01=0
        I02=0
        I03=0
        I04=0
        I05=0
C----------
C  CONSTANT REAL ZERO ARGUMENTS
C----------
        X01=0.
        X02=0.
        X03=0.
        X04=0.
        X05=0.
        X06=0.
        X07=0.
        X08=0.
        X09=0.
        X010=0.
        X011=0.
        X012=0.
C----------
C  CONSTANT CHARACTER ARGUMENTS
C----------
        CTYPE=' '
        PROD='  '
C----------
C  CONSTANT INTEGER ARGUMENTS
C----------
        I1= 1
        IREGN= 6
C
        IF(VEQNNB(ISPC)(4:4).EQ.'F')THEN
C
          IF(DEBUG)WRITE(JOSTND,*)' CALLING PROFILE BF ISPC,ARGS = ',
     &    ISPC,IREGN,FORST,VEQNNB(ISPC),BFTOPD(ISPC),BFSTMP(ISPC),D,H,
     &    DBT,BARK
C
          CALL PROFILE (IREGN,FORST,VEQNNB(ISPC),TOPDIB,X01,
     &    BFSTMP(ISPC),D,HTTYPE,H,I01,X02,X03,X04,X05,X06,X07,
     &    X08,X09,I02,DBT,BARK*100.,LOGDIA,BOLHT,LOGLEN,LOGVOL,
     &    TVOL,I03,X010,X011,I1,I1,I1,I04,I05,X012,CTYPE,I01,
     &    PROD,IERR)
C
          IF(D.GE.BFMIND(ISPC))THEN
            IF(IT.GT.0)HT2TD(IT,1)=X02
          ELSE
            IF(IT.GT.0)HT2TD(IT,1)=0.
          ENDIF
C
          IF(DEBUG)WRITE(JOSTND,*)' AFTER PROFILE BF TVOL= ',TVOL
        ELSE
C----------
C  CALL R6VOL TO COMPUTE BOARD VOLUME.
C----------
          NLOGS = 0.
          NLOGMS = 0.
          NLOGTW = 0.
          DBTBH = D-D*BARK
          IERR=0
          CTYPE=' '
          X0=0.
c
          IF(IFOR .LE. 2) THEN
            IF(DEBUG)WRITE(JOSTND,*)' CALLING BF R6VOL ARGS= ',
     &      ifor,FORST,VEQNNB(ISPC),D,BARK*100.,IFC,TOPDIB,H,DBTBH
            CALL R6VOL(VEQNNB(ISPC),FORST,D,BARK*100.,IFC,TOPDIB,H,
     &          'F',TVOL,LOGVOL,NLOGS,LOGDIA,SCALEN,DBTBH,X0,CTYPE,IERR)
            IF(DEBUG)WRITE(JOSTND,*)' AFTER BF R6VOL TVOL= ',TVOL
          ELSE
            IF(DEBUG)WRITE(16,*)' before BLMVOL-BFTOPD(ISPC),BARK= ',
     &      BFTOPD(ISPC),BARK
C
            CALL BLMVOL(VEQNNB(ISPC),BFTOPD(ISPC),H,X0,D,'F',IFC,TVOL,
     &                  LOGDIA,LOGLEN,LOGVOL,LOGST,NLOGMS,NLOGTW,APC,
     &                  1,1,IERR)

            IF(DEBUG)WRITE(16,*)' AFTER BLMVOL-VEQNNB(ISPC),',
     &      'BFTOPD(ISPC),H,X0,D,F,IFC,TVOL,LOGDIA, LOGLEN,LOGVOL,',
     &      'LOGST,NLOGMS,NLOGTW,APC= ',VEQNNB(ISPC),BFTOPD(ISPC),H,
     &      X0,D,'F',IFC,TVOL,LOGDIA,LOGLEN,LOGVOL,LOGST,NLOGMS,NLOGTW,
     &      APC
           TVOL(1)=TVOL1
            TVOL(4)=TVOL4
          ENDIF
        ENDIF
        TVOL(1)=TVOL1
        TVOL(4)=TVOL4
      ENDIF            ! END BF SECTION
C----------
C  SET RETURN VALUES.
C----------
      VN=TVOL(1)
      IF(VN.LT.0.)VN=0.
      VMAX=VN
      IF(D .LT. DBHMIN(ISPC))THEN
        VM = 0.
      ELSE
        VM=TVOL(4)
        IF(VM.LT.0.)VM=0.
      ENDIF
      IF(D.LT.BFMIND(ISPC))THEN
        BBFV=0.
      ELSE
        IF(METHB(ISPC).EQ.9) THEN
          BBFV=TVOL(10)
        ELSE
          BBFV=TVOL(2)
        ENDIF
        IF(BBFV.LT.0.)BBFV=0.
      ENDIF
      CTKFLG = .TRUE.
      BTKFLG = .TRUE.
      RETURN
C
C
C
C
C----------
C  ENTER ANY OTHER CUBIC HERE
C----------
      ENTRY OCFVOL (VN,VM,ISPC,D,H,TKILL,BARK,ITRNC,VMAX,LCONE,
     1              CTKFLG,IT)
      VN=0.
      VMAX=0.
      VM=0.
      CTKFLG = .FALSE.
      RETURN
C
C
C----------
C  ENTER ANY OTHER BOARD HERE.
C----------
      ENTRY OBFVOL (BBFV,ISPC,D,H,TKILL,BARK,ITRNC,VMAX,LCONE,
     1              BTKFLG,IT)
      BBFV=0.
      BTKFLG = .FALSE.
      RETURN
C
C
C----------
C  ENTRY POINT FOR SENDING VOLUME EQN NUMBER TO THE FVS-TO-NATCRZ ROUTINE
C----------
      ENTRY GETEQN(ISPC,D,H,EQNC,EQNB,TDIBC,TDIBB)
      EQNC=VEQNNC(ISPC)
      EQNB=VEQNNB(ISPC)
      TDIBC=TOPD(ISPC)*BRATIO(ISPC,D,H)
      TDIBB=BFTOPD(ISPC)*BRATIO(ISPC,D,H)
      RETURN
C
      END
